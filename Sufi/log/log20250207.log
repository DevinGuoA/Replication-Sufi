------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/devin/Desktop/BA952 Replication/Sufi/log/log20250207.log
  log type:  text
 opened on:   7 Feb 2025, 01:38:39

. 
. //************** Clean the dataset **************//
. do "${root}/do_file/merge.do"

. /***********************************************************************************************
> This transcript:
> - Merge the firm characteristics with Sufi(2009) specific data
> ***********************************************************************************************/
. clear all

. set more off

. 
. /***********************************
> Read in Compustat Data 
> ***********************************/
. use "${root}/raw_data/annual_fundamental.dta"

. sort gvkey fyear

. destring gvkey,replace
gvkey: all characters numeric; replaced as long

. drop if indfmt=="FS"
(17,128 observations deleted)

. xtset gvkey fyear

Panel variable: gvkey (unbalanced)
 Time variable: fyear, 1990 to 2005, but with gaps
         Delta: 1 unit

. 
. /***********************************
> Clean Variables
> ***********************************/
. destring sic,replace
sic: all characters numeric; replaced as int

. gen ind_group = .
(175,036 missing values generated)

. replace ind_group = 1 if (sic >= 100 & sic <= 1999)    // Agriculture and mining
(13,681 real changes made)

. replace ind_group = 2 if (sic >= 2000 & sic <= 3999)   // Manufacturing
(58,618 real changes made)

. replace ind_group = 3 if (sic >= 4000 & sic <= 4799)   // Transportation and communication
(3,734 real changes made)

. replace ind_group = 4 if (sic >= 4800 & sic <= 4999)   // Utilities
(12,850 real changes made)

. replace ind_group = 5 if (sic >= 6000 & sic <= 6999)   // Finance (to be excluded)
(39,724 real changes made)

. replace ind_group = 6 if (sic >= 5000 & sic <= 5999)   // Wholesale and retail trade
(14,629 real changes made)

. replace ind_group = 7 if (sic >= 7000 & sic <= 8999)   // Services
(28,855 real changes made)

. replace ind_group = 8 if (sic >= 9000 & sic <= 9999)   // Public and non-profit organizations
(2,945 real changes made)

. tab ind_group, gen(ind_dummy)

  ind_group |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     13,681        7.82        7.82
          2 |     58,618       33.49       41.31
          3 |      3,734        2.13       43.44
          4 |     12,850        7.34       50.78
          5 |     39,724       22.69       73.47
          6 |     14,629        8.36       81.83
          7 |     28,855       16.49       98.32
          8 |      2,945        1.68      100.00
------------+-----------------------------------
      Total |    175,036      100.00

. 
. /* Firm Age Calculation */
. gen firm_age = year(datadate) - year(ipodate) if year(datadate) - year(ipodate)>=0
(111,788 missing values generated)

. egen avg_firm_age = mean(firm_age), by(ind_group)

. replace firm_age = avg_firm_age if missing(firm_age)
(111,788 real changes made)

. label variable firm_age "Firm age (years since IPO)"

. 
. /* Assets - cash  */
. gen assets_cash = at - che
(20,117 missing values generated)

. label variable assets_cash "Assets-cash"

. gen ln_assets_cash = ln(assets_cash)
(21,093 missing values generated)

. egen lower_assets_cash = pctile(assets_cash), p(5)

. egen upper_assets_cash = pctile(assets_cash), p(95)

. gen lag_ln_assets_cash = L.ln_assets_cash 
(41,068 missing values generated)

. label variable lag_ln_assets_cash "$\text{Ln(assets-cash)}_{t-1}$"

. 
. /*  Book debt/assets */
. gen debt_to_assets = (dlc + dltt) / at if at > 0 & !missing(at)
(21,196 missing values generated)

. label variable debt_to_assets "Book debt/assets"

. 
. /* EBITDA / (assets - cash) */
. gen EBITDA_to_assets_cash = oibdp / assets_cash if assets_cash != 0 & !missing(assets_cash)
(25,588 missing values generated)

. label variable EBITDA_to_assets_cash "EBITDA/(assets-cash)"

. egen lower_cut_ebitda = pctile(EBITDA_to_assets_cash), p(5)

. egen upper_cut_ebitda = pctile(EBITDA_to_assets_cash), p(95)

. gen lag_EBITDA_to_assets_cash = L.EBITDA_to_assets_cash
(44,910 missing values generated)

. label variable lag_EBITDA_to_assets_cash "$\frac{\text{EBITDA}}{\text{assets-cash}}_{t-1}$"

. 
. /* Tangible assets / (assets - cash): two approaches */
. gen tangible_assets_to_assets_cash = ppent/ assets_cash if assets_cash != 0 & !missing(assets_cash)
(24,447 missing values generated)

. label variable tangible_assets_to_assets_cash "Tangible assets/(assets-cash)"

. egen lower_cut_tangible = pctile(tangible_assets_to_assets_cash), p(5)

. egen upper_cut_tangible = pctile(tangible_assets_to_assets_cash), p(95)

. gen lag_tangible = L.tangible_assets_to_assets_cash
(44,012 missing values generated)

. label variable lag_tangible "$\frac{\text{Tangible assets}}{\text{assets-cash}}_{t-1}$"

. 
. /* Net worth, cash adjusted */
. gen net_w=seq-pstk
(20,271 missing values generated)

. gen net_worth = (net_w)/assets_cash
(21,468 missing values generated)

. label variable net_worth "Net worth, cash adjusted"

. gen lag_net_worth = L.net_worth
(41,377 missing values generated)

. label variable lag_net_worth "$\text{Net worth, cash adjusted}_{t-1}$"

. 
. /* Market-to-book, cash adjusted */ 
. gen market_to_book_cash_adjusted = (prcc_f * csho)/(at-lt-pstk-txdb-che)
(56,978 missing values generated)

. label variable market_to_book_cash_adjusted "Market-to-book, cash adjusted"

. egen lower_market_to_book = pctile(market_to_book_cash_adjusted), p(5)

. egen upper_market_to_book = pctile(market_to_book_cash_adjusted), p(95)

. egen avg_market_to_book = mean(market_to_book_cash_adjusted), by(ind_group)

. replace market_to_book_cash_adjusted = avg_market_to_book if missing(market_to_book_cash_adjusted)
(56,978 real changes made)

. gen lag_market_to_book_cash_adjusted = L.market_to_book_cash_adjusted
(21,916 missing values generated)

. label variable lag_market_to_book_cash_adjusted "$\text{Market-to-book, cash adjusted}_{t-1}$"

. 
. /* Traded Over the Counter  */
. gen otc = (exchg == 17 | exchg == 15 | exchg == 14)

. label define otc_label 0 "Not OTC" 1 "Traded Over the Counter"

. label values otc otc_label

. label variable otc "Traded over the counter {0,1}"

. 
. /* ln(age+1) */
. gen ln_firm_age_1 =ln(firm_age+1)

. gen ln_firm_age = ln(firm_age)
(7,375 missing values generated)

. gen lag_firm_age = L.ln_firm_age_1
(21,916 missing values generated)

. label variable lag_firm_age "$\text{Firm age (years since IPO)}_{t-1}$"

. save "${root}/processing_data/database.dta",replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/database.dta saved

. 
. /***********************************
> Merge
> ***********************************/
. 
. do "${root}/do_file/S&P_clean.do"

. /***********************************************************************************************
> This transcript:
> - Clean S&P 500 dataset and generate the S&P 500 dummy
> ***********************************************************************************************/
. 
. clear all

. set more off

. 
. * Load the raw data
. use "${root}/raw_data/sp500.dta", clear

. 
. * Create a dummy variable for S&P 500 membership (81, 91, or 92)
. gen sp500 = inlist(spmim, 81, 91, 92)

. 
. * Handle missing values (if any)
. replace sp500 = 0 if missing(sp500)
(0 real changes made)

. 
. * Label the dummy variable
. label define sp500_label 0 "Not in S&P 500" 1 "In S&P 500"

. label values sp500 sp500_label

. label variable sp500 "S&P membership indicator {0,1}"

. 
. * Collapse the data to the annual level (by firm-year)
. * Use (max) to assign 1 if any month within the year qualifies
. collapse (max) sp500, by(gvkey fyear)

. 
. * Save the cleaned data
. save "${root}/processing_data/sp500_clean.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/sp500_clean.dta saved

. 
. 
end of do-file

. sort gvkey fyear

. merge 1:1 gvkey fyear using "${root}/processing_data/database.dta"
(variable fyear was float, now double to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                       110,009
        from master                    49,184  (_merge==1)
        from using                     60,825  (_merge==2)

    Matched                           114,211  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(110,009 observations deleted)

. drop _merge

. label variable sp500 "Not in an S\&P index {0,1}"

. save "${root}/processing_data/merge_after_sp.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/merge_after_sp.dta saved

. 
. /* Cash flow volalitity window method */
. do "${root}/do_file/cash_flow_clean.do"

. use "${root}/raw_data/cashflow_volatility_window.dta", clear

. destring gvkey,replace
gvkey: all characters numeric; replaced as long

. gen cash_flow = ni+dp
(42,724 missing values generated)

. sort gvkey fyear

. gen start_year = fyear - 4 if fyear >= 1996
(63,133 missing values generated)

. rangestat (sd) cash_flow, by(gvkey) interval(fyear start_year fyear)

. rename cash_flow_sd cash_flow_volatility

. drop start_year

. keep gvkey fyear cash_flow_volatility

. duplicates drop gvkey fyear,force

Duplicates in terms of gvkey fyear

(17,090 observations deleted)

. save "${root}/processing_data/cash_flow_volatility_window.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/cash_flow_volatility_window.dta saved

. 
end of do-file

. use  "${root}/processing_data/cash_flow_volatility_window.dta",clear

. merge 1:1 gvkey fyear using "${root}/processing_data/merge_after_sp.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                        60,863
        from master                    60,863  (_merge==1)
        from using                          0  (_merge==2)

    Matched                           114,211  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(60,863 observations deleted)

. drop _merge

. gen scale_cash_flow_volatility = cash_flow_volatility/(at-che) if (at-che)!=0
(15,722 missing values generated)

. label variable scale_cash_flow_volatility "Cash-flow volalitity"

. gen lag_scale_cash_flow_volatility = L.scale_cash_flow_volatility
(31,420 missing values generated)

. label variable lag_scale_cash_flow_volatility "$\text{Cash-flow volatility}_{t-1}$"

. save "${root}/processing_data/database1.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/database1.dta saved

. 
. /* Cash flow volalitity quarterly method (see appendix) */
. do "${root}/do_file/cash_flow_clean_quarterly.do"

. * Reload the original raw data
. use "${root}/raw_data/cash_flow_volatility_quarterly.dta", clear

. destring gvkey, replace
gvkey: all characters numeric; replaced as long

. gen net_cash_flow = niq+dpq
(101,197 missing values generated)

. gen time = yq(fyearq, fqtr)

. format time %tq

. assert !missing(time)  

. collapse (mean) net_cash_flow, by(gvkey time)

. gen fyear = year(dofq(time))

. sort gvkey time 

. bysort gvkey fyear: egen cash_flow_volatility = sd(net_cash_flow)
(103,557 missing values generated)

. bysort gvkey fyear: egen annual_cash_flow = total(net_cash_flow)

. duplicates drop gvkey fyear, force

Duplicates in terms of gvkey fyear

(320,156 observations deleted)

. winsor2 cash_flow_volatility, cuts(5,95) replace

. drop if missing(cash_flow_volatility)
(30,014 observations deleted)

. keep gvkey fyear annual_cash_flow cash_flow_volatility

. order gvkey fyear annual_cash_flow cash_flow_volatility

. duplicates drop gvkey fyear,force

Duplicates in terms of gvkey fyear

(0 observations are duplicates)

. save "${root}/processing_data/cash_flow_volatility_quarterly.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/cash_flow_volatility_quarterly.dta saved

. 
end of do-file

. use  "${root}/processing_data/cash_flow_volatility_quarterly.dta",clear

. merge 1:1 gvkey fyear using "${root}/processing_data/merge_after_sp.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                        49,314
        from master                    10,446  (_merge==1)
        from using                     38,868  (_merge==2)

    Matched                            75,343  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(49,314 observations deleted)

. drop _merge

. gen scale_cash_flow_volatility = cash_flow_volatility/(at-che) if (at-che)!=0
(693 missing values generated)

. label variable scale_cash_flow_volatility "Cash-flow volalitity"

. xtset gvkey fyear

Panel variable: gvkey (unbalanced)
 Time variable: fyear, 1994 to 2004, but with gaps
         Delta: 1 unit

. gen lag_scale_cash_flow_volatility = L.scale_cash_flow_volatility
(17,427 missing values generated)

. label variable lag_scale_cash_flow_volatility "$\text{Cash-flow volatility}_{t-1}$"

. save "${root}/processing_data/database1a.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/database1a.dta saved

. 
. /* Industry Sales volalitity window method*/
. do "${root}/do_file/industry_clean_window.do"

. // Load the Compustat firm-level dataset
. use "${root}/raw_data/industry_volatility_window.dta", clear

. 
. // Step 1: Convert SIC to numeric and define industry groups
. destring sic, replace
sic: all characters numeric; replaced as int

. gen ind_group = .
(167,667 missing values generated)

. replace ind_group = 1 if (sic >= 100 & sic <= 1999)    // Agriculture and mining
(11,566 real changes made)

. replace ind_group = 2 if (sic >= 2000 & sic <= 3999)   // Manufacturing
(51,682 real changes made)

. replace ind_group = 3 if (sic >= 4000 & sic <= 4799)   // Transportation and communication
(3,228 real changes made)

. replace ind_group = 4 if (sic >= 4800 & sic <= 4999)   // Utilities
(11,351 real changes made)

. replace ind_group = 5 if (sic >= 6000 & sic <= 6999)   // Finance (to be excluded)
(48,406 real changes made)

. replace ind_group = 6 if (sic >= 5000 & sic <= 5999)   // Wholesale and retail trade
(13,224 real changes made)

. replace ind_group = 7 if (sic >= 7000 & sic <= 8999)   // Services
(25,650 real changes made)

. replace ind_group = 8 if (sic >= 9000 & sic <= 9999)   // Public and non-profit organizations
(2,560 real changes made)

. 
. // Create industry dummies for potential analysis
. tab ind_group, gen(ind_dummy)

  ind_group |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     11,566        6.90        6.90
          2 |     51,682       30.82       37.72
          3 |      3,228        1.93       39.65
          4 |     11,351        6.77       46.42
          5 |     48,406       28.87       75.29
          6 |     13,224        7.89       83.17
          7 |     25,650       15.30       98.47
          8 |      2,560        1.53      100.00
------------+-----------------------------------
      Total |    167,667      100.00

. 
. // Step 2: Aggregate firm-level sales (revt) to compute annual industry sales
. collapse (sum) revt, by(ind_group fyear)

. rename revt industry_sale

. 
. // Step 3: Calculate the five-year rolling volatility of industry sales
. sort ind_group fyear

. 
. // Use rangestat to calculate five-year rolling standard deviation
. rangestat (sd) industry_sale, by(ind_group) interval(fyear -4 0)

. rename industry_sale_sd industry_sale_volatility

. 
. // Step 4: Save the result
. 
. save "${root}/processing_data/industry_clean_window.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/industry_clean_window.dta saved

. 
end of do-file

. use "${root}/processing_data/database1.dta",clear

. merge m:1 ind_group fyear using "${root}/processing_data/industry_clean_window.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                         9,689
        from master                     9,656  (_merge==1)
        from using                         33  (_merge==2)

    Matched                           104,555  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(9,689 observations deleted)

. drop _merge

. egen sum_industry_assets = sum(at), by(ind_group fyear)

. gen scaled_industry_sale_volatility = industry_sale_volatility / sum_industry_assets

. label variable scaled_industry_sale_volatility "Industry sales volalitity"

. egen lower_industry = pctile(scaled_industry_sale_volatility), p(5)

. egen upper_industry = pctile(scaled_industry_sale_volatility), p(95)

. xtset gvkey fyear

Panel variable: gvkey (unbalanced)
 Time variable: fyear, 1994 to 2003, but with gaps
         Delta: 1 unit

. gen lag_industry_volatility = L.scaled_industry_sale_volatility
(17,418 missing values generated)

. label variable lag_industry_volatility "$\text{Industry sales volatility}_{t-1}$"

. save "${root}/processing_data/database2.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/database2.dta saved

. 
. /* Industry Sales volalitity quarterly method (see appendix)*/
. do "${root}/do_file/industry_clean.do"

. /***********************************************************************************************
> This transcript:
> - Cleans the industry sale volatility and generates the variable
> ***********************************************************************************************/
. 
. 
. clear all

. set more off

. use "${root}/raw_data/industry_volatility.dta", clear

. destring sic,replace
sic: all characters numeric; replaced as int

. gen ind_group = .
(436,303 missing values generated)

. replace ind_group = 1 if (sic >= 100 & sic <= 1999)    // Agriculture and mining
(32,898 real changes made)

. replace ind_group = 2 if (sic >= 2000 & sic <= 3999)   // Manufacturing
(145,194 real changes made)

. replace ind_group = 3 if (sic >= 4000 & sic <= 4799)   // Transportation and communication
(9,143 real changes made)

. replace ind_group = 4 if (sic >= 4800 & sic <= 4999)   // Utilities
(31,915 real changes made)

. replace ind_group = 5 if (sic >= 6000 & sic <= 6999)   // Finance (to be excluded)
(98,011 real changes made)

. replace ind_group = 6 if (sic >= 5000 & sic <= 5999)   // Wholesale and retail trade
(35,818 real changes made)

. replace ind_group = 7 if (sic >= 7000 & sic <= 8999)   // Services
(75,723 real changes made)

. replace ind_group = 8 if (sic >= 9000 & sic <= 9999)   // Public and non-profit organizations
(7,601 real changes made)

. 
. // Drop finance and public/non-profit organizations
. 
. // Generate dummy variables for remaining industry groups
. tab ind_group, gen(ind_dummy)

  ind_group |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |     32,898        7.54        7.54
          2 |    145,194       33.28       40.82
          3 |      9,143        2.10       42.91
          4 |     31,915        7.31       50.23
          5 |     98,011       22.46       72.69
          6 |     35,818        8.21       80.90
          7 |     75,723       17.36       98.26
          8 |      7,601        1.74      100.00
------------+-----------------------------------
      Total |    436,303      100.00

. 
. // Drop unnecessary ind_dummy1 (no longer needed)
. drop ind_dummy1

. 
. // Generate year variable based on fiscal quarter year
. gen year = fyearq

. 
. // Calculate cumulative quarterly sales
. bysort ind_group year (fqtr): gen industry_quarterly_sales = sum(revtq)

. 
. // Collapse to calculate mean and standard deviation of revenue per industry per year
. collapse (mean) quarterly_sales = revtq (sd) sales_volatility = revtq, by(ind_group year)

. 
. // Rename variables for clarity
. rename year fyear

. rename sales_volatility industry_sale_volatility

. 
. // Label the variables
. label variable quarterly_sales "Mean Quarterly Sales (Revenue)"

. label variable industry_sale_volatility "Industry Sales Volatility (Standard Deviation)"

. 
. // Winsorize industry sales volatility at 5th and 95th percentiles
. winsor2 industry_sale_volatility, cuts(5,95) replace

. 
. // Drop observations with missing industry sale volatility
. drop if missing(industry_sale_volatility)
(0 observations deleted)

. 
. // Save the cleaned dataset
. save "${root}/processing_data/industry_clean.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/industry_clean.dta saved

. 
end of do-file

. use "${root}/processing_data/database1a.dta",clear

. merge m:1 ind_group fyear using "${root}/processing_data/industry_clean.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                            75,343  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(0 observations deleted)

. drop _merge

. egen sum_industry_assets = sum(at), by(ind_group fyear)

. gen scaled_industry_sale_volatility = industry_sale_volatility / sum_industry_assets

. label variable scaled_industry_sale_volatility "Industry sales volalitity"

. egen lower_industry = pctile(scaled_industry_sale_volatility), p(5)

. egen upper_industry = pctile(scaled_industry_sale_volatility), p(95)

. xtset gvkey fyear

Panel variable: gvkey (unbalanced)
 Time variable: fyear, 1994 to 2004, but with gaps
         Delta: 1 unit

. gen lag_industry_volatility = L.scaled_industry_sale_volatility
(17,068 missing values generated)

. label variable lag_industry_volatility "$\text{Industry sales volatility}_{t-1}$"

. save "${root}/processing_data/database2a.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/processing_data/database2a.dta saved

. 
. /* Merge with Sufi(2009)*/
. use "${root}/processing_data/database2.dta",clear

. keep if fyear>=1996 & fyear<=2003
(19,666 observations deleted)

. merge 1:1 gvkey fyear using "${root}/raw_data/sufi(2009).dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                        56,446
        from master                    56,444  (_merge==1)
        from using                          2  (_merge==2)

    Matched                            28,445  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(56,446 observations deleted)

. drop _merge

. label variable lineofcredit "Has line of credit {0,1}"

. label variable lineofcredit_rs "Has line of credit {0,1}"

. gen total_line_assets = linetot/at if at!=0
(26,538 missing values generated)

. label variable total_line_assets "Total line of credit/assets"

. gen used_line_assets = line/at if at!=0
(26,538 missing values generated)

. label variable used_line_assets "Used line of credit/assets"

. gen total_line_total_line_cash= linetot/(linetot+che)
(26,538 missing values generated)

. label variable total_line_total_line_cash "Total line/(total line+cash)"

. gen unused_line_assets = lineun/at if at!=0
(26,538 missing values generated)

. label variable unused_line_assets "Unused line of credit/assets"

. gen unused_line_unused_line_cash = lineun/(lineun+che)
(26,540 missing values generated)

. label variable unused_line_unused_line_cash "Unused line/(unused line + cash)"

. label variable def "Violation of financial covenant {0,1}"

. save "${root}/prepared_data/database3.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/prepared_data/database3.dta saved

. 
. 
. /* Merge with Sufi(2009) (appendix)*/
. use "${root}/processing_data/database2a.dta",clear

. merge 1:1 gvkey fyear using "${root}/raw_data/sufi(2009).dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                        51,662
        from master                    49,279  (_merge==1)
        from using                      2,383  (_merge==2)

    Matched                            26,064  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(51,662 observations deleted)

. drop _merge

. label variable lineofcredit "Has line of credit {0,1}"

. label variable lineofcredit_rs "Has line of credit {0,1}"

. gen total_line_assets = linetot/at if at!=0
(24,316 missing values generated)

. label variable total_line_assets "Total line of credit/assets"

. gen used_line_assets = line/at if at!=0
(24,316 missing values generated)

. label variable used_line_assets "Used line of credit/assets"

. gen total_line_total_line_cash= linetot/(linetot+che)
(24,316 missing values generated)

. label variable total_line_total_line_cash "Total line/(total line+cash)"

. gen unused_line_assets = lineun/at if at!=0
(24,316 missing values generated)

. label variable unused_line_assets "Unused line of credit/assets"

. gen unused_line_unused_line_cash = lineun/(lineun+che)
(24,318 missing values generated)

. label variable unused_line_unused_line_cash "Unused line/(unused line + cash)"

. label variable def "Violation of financial covenant {0,1}"

. save "${root}/prepared_data/database3a.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/prepared_data/database3a.dta saved

. 
end of do-file

. 
. do "${root}/do_file/clean_basic.do"

. /***********************************************************************************************
> This transcript:
> - Clean the database2 using Sufi(2009) definitions
> ***********************************************************************************************/
. use "${root}/prepared_data/database3.dta",clear

. 
. /***********************************
> Drop conditions sets 
> ***********************************/
. gen asset_positive = (at > 0)                      

. gen ebitda_ok = !missing(oibdp)                    

. gen price_ok = !missing(prcc_f)                   

. gen shares_ok = !missing(csho)                     

. gen preferred_stock_ok = !missing(pstk)  

. gen lt_ok = !missing(lt)

. gen sale_ok =!missing(sale)

. gen txdb_ok = !missing(txdb)

. gen pstk_ok = !missing(pstk)

. gen dcvt_ok = !missing(dcvt)

. gen prcc_f_ok=!missing(prcc_f)

. gen csho_ok=!missing(csho)

. 
. gen valid_year = (fyear >= 1996 & fyear <= 2003) & asset_positive & ebitda_ok & price_ok & preferred_stock
> _ok & lt_ok & sale_ok & txdb_ok & pstk_ok & dcvt_ok & prcc_f_ok & csho_ok

. 
. gen consecutive_years = 0                          

. bysort gvkey (fyear): replace consecutive_years = ///
>     cond(valid_year, sum(valid_year[_n] & fyear == fyear[_n-1] + 1) + 1, 0)
(27237 real changes made)

. 
. egen max_consecutive_years = max(consecutive_years), by(gvkey)

. gen four_years_valid = (max_consecutive_years >= 4)

. 
. keep if four_years_valid == 1
(2,284 observations deleted)

. 
. drop asset_positive price_ok shares_ok preferred_stock_ok consecutive_years max_consecutive_years valid_ye
> ar

. 
. drop if missing(debt_to_assets)
(27 observations deleted)

. drop if missing(scaled_industry_sale_volatility)
(0 observations deleted)

. drop if missing(scale_cash_flow_volatility)
(5 observations deleted)

. drop if missing(EBITDA_to_assets_cash)
(14 observations deleted)

. drop if missing(otc)
(0 observations deleted)

. drop if missing(market_to_book_cash_adjusted)
(0 observations deleted)

. drop if missing(net_worth)
(0 observations deleted)

. drop if missing(tangible_assets_to_assets_cash)
(4 observations deleted)

. drop if missing(debt/assets)
(0 observations deleted)

. drop if missing(sp500)
(0 observations deleted)

. drop if missing(exchg)
(0 observations deleted)

. drop if (missing(total_line_assets) & randomsample == 1)
(0 observations deleted)

. drop if (missing(used_line_assets) & randomsample == 1)
(0 observations deleted)

. drop if (missing(unused_line_assets) & randomsample == 1)
(0 observations deleted)

. drop if (missing(unused_line_unused_line_cash) & randomsample == 1)
(2 observations deleted)

. drop if (missing(lineofcredit_rs) & randomsample == 1)
(0 observations deleted)

. 
. * winsor2 process *
. winsor2 assets_cash,cuts(5,95) replace

. winsor2 debt_to_assets, cuts(5,95) replace

. winsor2 EBITDA_to_assets_cash, cuts(5,95) replace

. winsor2 tangible_assets_to_assets_cash,cuts(5,95) replace

. winsor2 net_worth,cuts(5,95) replace

. winsor2 market_to_book_cash_adjusted, cuts(5,95) replace

. winsor2 scale_cash_flow_volatility,cuts(5,95) replace

. winsor2 scale_cash_flow_volatility,cuts(5,95) replace

. winsor2 scaled_industry_sale_volatility,cuts(5,95) replace

. winsor2 scaled_industry_sale_volatility,cuts(5,95) replace

. winsor2 lag_ln_assets_cash,cuts(5,95)replace

. winsor2 lag_EBITDA_to_assets_cash,cuts(5,95)replace

. winsor2 lag_tangible,cuts(5,95)replace

. winsor2 lag_net_worth,cuts(5,95)replace

. winsor2 lag_market_to_book_cash_adjusted,cuts(5,95)replace

. winsor2 lag_firm_age,cuts(5,95)replace

. 
. save "${root}/prepared_data/sufi(2009).dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/prepared_data/sufi(2009).dta saved

. 
end of do-file

. 
. do "${root}/do_file/clean_appendix.do"

. /***********************************************************************************************
> This transcript:
> - Clean the database2 using quarterly definitions
> ***********************************************************************************************/
. use "${root}/prepared_data/database3a.dta",clear

. 
. /***********************************
> Drop conditions sets 
> ***********************************/
. gen asset_positive = (at > 0)                      

. gen ebitda_ok = !missing(oibdp)                    

. gen price_ok = !missing(prcc_f)                   

. gen shares_ok = !missing(csho)                     

. gen preferred_stock_ok = !missing(pstk)  

. gen lt_ok = !missing(lt)

. gen sale_ok =!missing(sale)

. gen txdb_ok = !missing(txdb)

. gen pstk_ok = !missing(pstk)

. gen dcvt_ok = !missing(dcvt)

. gen prcc_f_ok=!missing(prcc_f)

. gen csho_ok=!missing(csho)

. 
. gen valid_year = (fyear >= 1996 & fyear <= 2003) & asset_positive & ebitda_ok & price_ok & preferred_stock
> _ok & lt_ok & sale_ok & txdb_ok & pstk_ok & dcvt_ok & prcc_f_ok & csho_ok

. 
. gen consecutive_years = 0                          

. bysort gvkey (fyear): replace consecutive_years = ///
>     cond(valid_year, sum(valid_year[_n] & fyear == fyear[_n-1] + 1) + 1, 0)
(24998 real changes made)

. 
. egen max_consecutive_years = max(consecutive_years), by(gvkey)

. gen four_years_valid = (max_consecutive_years >= 4)

. 
. keep if four_years_valid == 1
(3,065 observations deleted)

. 
. drop asset_positive ebitda_ok price_ok shares_ok preferred_stock_ok consecutive_years max_consecutive_year
> s valid_year

. 
. drop if missing(firm_age)
(0 observations deleted)

. drop if missing(debt_to_assets)
(20 observations deleted)

. drop if missing(scaled_industry_sale_volatility)
(0 observations deleted)

. drop if missing(scale_cash_flow_volatility)
(4 observations deleted)

. drop if missing(EBITDA_to_assets_cash)
(4 observations deleted)

. drop if missing(otc)
(0 observations deleted)

. drop if missing(market_to_book_cash_adjusted)
(0 observations deleted)

. drop if missing(net_worth)
(0 observations deleted)

. drop if missing(tangible_assets_to_assets_cash)
(2 observations deleted)

. drop if missing(debt/assets)
(0 observations deleted)

. drop if missing(sp500)
(0 observations deleted)

. drop if missing(exchg)
(0 observations deleted)

. drop if (missing(total_line_assets) & randomsample == 1)
(0 observations deleted)

. drop if (missing(used_line_assets) & randomsample == 1)
(0 observations deleted)

. drop if (missing(unused_line_assets) & randomsample == 1)
(0 observations deleted)

. drop if (missing(unused_line_unused_line_cash) & randomsample == 1)
(2 observations deleted)

. drop if (missing(lineofcredit_rs) & randomsample == 1)
(0 observations deleted)

. 
. * winsor2 process *
. winsor2 assets_cash,cuts(5,95) replace

. winsor2 debt_to_assets, cuts(5,95) replace

. winsor2 EBITDA_to_assets_cash, cuts(5,95) replace

. winsor2 tangible_assets_to_assets_cash,cuts(5,95) replace

. winsor2 net_worth,cuts(5,95) replace

. winsor2 market_to_book_cash_adjusted, cuts(5,95) replace

. winsor2 scale_cash_flow_volatility,cuts(5,95) replace

. winsor2 scale_cash_flow_volatility,cuts(5,95) replace

. winsor2 scaled_industry_sale_volatility,cuts(5,95) replace

. winsor2 scaled_industry_sale_volatility,cuts(5,95) replace

. winsor2 lag_ln_assets_cash,cuts(5,95)replace

. winsor2 lag_EBITDA_to_assets_cash,cuts(5,95)replace

. winsor2 lag_tangible,cuts(5,95)replace

. winsor2 lag_net_worth,cuts(5,95)replace

. winsor2 lag_market_to_book_cash_adjusted,cuts(5,95)replace

. winsor2 lag_firm_age,cuts(5,95)replace

. 
. save "${root}/prepared_data/sufi(2009)_appendix.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/prepared_data/sufi(2009)_appendix.dta saved

. 
end of do-file

. 
. //************** Table 1 **************//
. do"${root}/do_file/table1.do"

. /**********************************************************************************************
> This script: 
> - Generates a table with Full Sample and Random Sample side by side with aligned variables.
> ***********************************************************************************************/
. clear all

. set more off

. 
. use "${root}/prepared_data/sufi(2009).dta", clear

. 
. * Full sample and Random sample variable lists
. local fullsamplelist lineofcredit debt_to_assets EBITDA_to_assets_cash tangible_assets_to_assets_cash ///
>     net_worth assets_cash market_to_book_cash_adjusted scaled_industry_sale_volatility ///
>     scale_cash_flow_volatility sp500 otc firm_age

. 
. local randomsamplelist lineofcredit_rs total_line_assets unused_line_assets used_line_assets ///
>     debt_to_assets EBITDA_to_assets_cash tangible_assets_to_assets_cash net_worth assets_cash ///
>     market_to_book_cash_adjusted scaled_industry_sale_volatility scale_cash_flow_volatility ///
>     sp500 otc firm_age

. 
. * Set variable labels to match the required order and descriptions
. label variable lineofcredit "Has line of credit {0,1}"

. label variable lineofcredit_rs "Has line of credit {0,1}"  // Same label for Full and Random samples

. 
. label variable total_line_assets "Total line of credit/assets"

. label variable unused_line_assets "Unused line of credit/assets"

. label variable used_line_assets "Used line of credit/assets"

. label variable debt_to_assets "Book debt/assets"

. label variable EBITDA_to_assets_cash "EBITDA/(assets-cash)"

. label variable tangible_assets_to_assets_cash "Tangible assets/(assets-cash)"

. label variable net_worth "Net worth, cash adjusted"

. label variable assets_cash "Assets-cash"

. label variable market_to_book_cash_adjusted "Market-to-book, cash adjusted"

. label variable scaled_industry_sale_volatility "Industry sales volatility"

. label variable scale_cash_flow_volatility "Cash-flow volatility"

. label variable sp500 "Not in an S\&P index {0,1}"

. label variable otc "Traded over the counter {0,1}"

. label variable firm_age "Firm age (years since IPO)"

. 
. * Generate summary statistics for Full Sample
. estpost tabstat `fullsamplelist', statistics(mean median sd) columns(statistics)

Summary statistics: mean p50 sd
     for variables: lineofcredit debt_to_assets EBITDA_to_assets_cash tangible_assets_to_assets_cash net_wor
> th assets_cash market_to_book_cash_adjusted scaled_industry_sale_volatility scale_cash_flow_volatility sp5
> 00 otc firm_age

             |   e(mean)     e(p50)      e(sd) 
-------------+---------------------------------
lineofcredit |  .8233559          1   .3813745 
debt_to_as~s |  .2011692   .1748125   .1792115 
EBITDA_to_~h |  .0484408   .1222695   .2941153 
tangible_a~h |  .3383629   .2757785   .2404066 
   net_worth |  .7825755   .5987213   .5923134 
 assets_cash |  813.2025    116.757   1661.312 
market_to_~d |  4.414445   2.495098    7.10225 
scaled_ind~y |  .0987339   .0827328   .0474092 
scale_cash~y |  .1467519   .0573562   .2149772 
       sp500 |  .2228733          0    .416182 
         otc |  .4300816          0   .4950968 
    firm_age |  6.198726          6   3.490391 

. est store a

. 
. * Generate summary statistics for Random Sample
. estpost tabstat `randomsamplelist' if randomsample==1, statistics(mean median sd) columns(statistics)

Summary statistics: mean p50 sd
     for variables: lineofcredit_rs total_line_assets unused_line_assets used_line_assets debt_to_assets EBI
> TDA_to_assets_cash tangible_assets_to_assets_cash net_worth assets_cash market_to_book_cash_adjusted scale
> d_industry_sale_volatility scale_cash_flow_volatility sp500 otc firm_age

             |   e(mean)     e(p50)      e(sd) 
-------------+---------------------------------
lineofcred~s |  .7562391          1   .4294748 
total_line~s |  .1628777   .1148934   .1715541 
unused_lin~s |   .103822   .0692591   .1274059 
used_line_~s |  .0590557          0   .0985245 
debt_to_as~s |  .2026818    .177586   .1834629 
EBITDA_to_~h |  .0571978   .1218747   .2917111 
tangible_a~h |  .3357419   .2833552    .227685 
   net_worth |  .7868077   .6104427   .5885184 
 assets_cash |  809.8315    124.783   1658.685 
market_to_~d |  4.339297   2.466567   6.668413 
scaled_ind~y |  .1036454   .0827328   .0500614 
scale_cash~y |  .1430693   .0579743   .2108865 
       sp500 |  .2350551          0   .4241564 
         otc |  .4201973          0   .4937337 
    firm_age |  6.003325          6   3.536289 

. est store b

. 
. * Create LaTeX table using esttab, with the specified order and group headers
. esttab a b using "${root}/output/table1_raw.tex", ///
>     replace mtitles("\textbf{\emph{Full Sample}}" "\textbf{\emph{Random Sample}}") ///
>     collabels(\multicolumn{1}{c}{{Mean}} \multicolumn{1}{c}{{Median}} \multicolumn{1}{c}{{St.Dev}}) ///
>     cells("mean(fmt(3)) p50(fmt(3)) sd(fmt(3))") /// Use mean, median (p50), and standard deviation (sd)
>     label noobs booktabs ///
>     order(lineofcredit lineofcredit_rs total_line_assets unused_line_assets used_line_assets ///
>           debt_to_assets EBITDA_to_assets_cash tangible_assets_to_assets_cash net_worth ///
>           assets_cash market_to_book_cash_adjusted scaled_industry_sale_volatility ///
>           scale_cash_flow_volatility sp500 otc firm_age) ///
>     refcat(lineofcredit "\textit{Line of Credit Variables}" debt_to_assets "\textit{Firm Characteristics}"
> , nolabel) ///
>     alignment(c)  // Center-align the table content
(output written to /Users/devin/Desktop/BA952 Replication/Sufi/output/table1_raw.tex)

. 
end of do-file

. 
. //************** Table 3 **************//
. do"${root}/do_file/table3.do"

. /***********************************************************************************************
> This script: 
> Generate the Table 3 in Sufi(2009)
> ***********************************************************************************************/
. clear all

. set more off

. 
. use "${root}/prepared_data/sufi(2009).dta", clear

. xtset gvkey fyear

Panel variable: gvkey (unbalanced)
 Time variable: fyear, 1996 to 2003, but with gaps
         Delta: 1 unit

. misstable summarize
                                                               Obs<.
                                                +------------------------------
               |                                | Unique
      Variable |     Obs=.     Obs>.     Obs<.  | values        Min         Max
  -------------+--------------------------------+------------------------------
          dcvt |        67              26,042  |   >500          0        4720
         pstkc |        20              26,089  |   >500         -7        2725
         pstkl |         1              26,108  |   >500          0        5442
        pstkrv |         1              26,108  |   >500          0        5442
          txdb |       337              25,772  |   >500          0       36713
        prcc_f |         1              26,108  |   >500       .001       791.4
       ipodate |    12,637              13,472  |   >500      -5100       22179
   ln_firm_age |        14              26,095  |     59          0    4.043051
  lag_scale_~y |         1              26,108  |   >500   .0001918    994.6466
  lag_indust~y |         1              26,108  |     64   .0215057    .2588197
        lineun |    24,386               1,723  |   >500          0       10400
          line |    24,386               1,723  |   >500          0        4755
       linetot |    24,386               1,723  |   >500          0       14671
  lineofcred~s |    24,386               1,723  |      2          0           1
           def |    24,386               1,723  |      2          0           1
  total_line~s |    24,386               1,723  |   >500          0     1.42002
  used_line_~s |    24,386               1,723  |   >500          0    .6727301
  total_line~h |    24,386               1,723  |   >500          0           1
  unused_lin~s |    24,386               1,723  |   >500          0    1.327842
  unused_lin~h |    24,386               1,723  |   >500          0           1
  -----------------------------------------------------------------------------

. 
. /***********************************
> Regression
> ***********************************/
. 
. /***********************************
> Regression and Calculate Number of Firms
> ***********************************/
. 
. quietly probit lineofcredit lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash lag_net_worth ///
>     lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age i.fyear ///
>     ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8, vce(cluster gvkey) 

. est store reg1

. 
. levelsof gvkey if e(sample), local(firms_reg1)
1004 1021 1034 1045 1050 1056 1072 1076 1078 1082 1094 1099 1104 1109 1111 1115 1117 1161 1164 1173 1209 121
> 0 1213 1228 1230 1234 1239 1240 1244 1246 1254 1259 1266 1274 1279 1281 1300 1318 1324 1327 1356 1359 1360
>  1380 1393 1397 1408 1410 1439 1440 1444 1468 1478 1496 1500 1511 1518 1523 1530 1533 1542 1554 1559 1562 
> 1577 1581 1585 1593 1598 1602 1606 1613 1618 1632 1633 1634 1635 1641 1650 1655 1659 1663 1669 1677 1678 1
> 682 1686 1690 1704 1706 1722 1728 1743 1766 1773 1783 1786 1794 1797 1820 1823 1837 1848 1856 1860 1864 18
> 66 1868 1875 1878 1884 1891 1902 1906 1913 1914 1926 1940 1951 1968 1969 1971 1974 1976 1979 1981 1992 199
> 5 2008 2033 2034 2044 2049 2052 2054 2058 2061 2073 2080 2085 2086 2100 2101 2111 2113 2124 2136 2138 2146
>  2150 2154 2163 2169 2175 2189 2193 2213 2220 2222 2230 2237 2240 2246 2251 2255 2259 2267 2270 2282 2285 
> 2290 2295 2299 2309 2312 2322 2328 2337 2342 2345 2346 2352 2390 2393 2402 2403 2435 2436 2437 2444 2448 2
> 461 2469 2482 2484 2489 2490 2497 2498 2518 2519 2521 2536 2537 2538 2553 2555 2556 2561 2562 2573 2574 25
> 77 2581 2589 2593 2595 2596 2602 2606 2615 2616 2628 2663 2710 2751 2783 2787 2797 2802 2803 2807 2811 281
> 8 2829 2845 2847 2856 2859 2860 2870 2884 2888 2889 2897 2903 2909 2916 2929 2938 2940 2942 2950 2951 2953
>  2955 2960 2965 2982 2986 2991 2999 3007 3011 3026 3028 3031 3036 3048 3054 3055 3062 3063 3078 3087 3093 
> 3099 3103 3105 3107 3114 3116 3121 3126 3129 3134 3138 3144 3153 3156 3157 3158 3170 3171 3203 3218 3226 3
> 229 3246 3248 3255 3265 3273 3275 3277 3282 3291 3297 3311 3333 3334 3336 3342 3354 3358 3365 3366 3367 33
> 69 3376 3384 3391 3393 3394 3399 3416 3422 3424 3465 3480 3502 3504 3505 3532 3533 3556 3570 3574 3580 358
> 4 3594 3607 3612 3618 3619 3622 3639 3647 3650 3662 3673 3691 3700 3707 3711 3713 3734 3735 3756 3761 3785
>  3786 3793 3796 3798 3806 3807 3814 3821 3824 3833 3835 3840 3851 3855 3863 3872 3886 3892 3897 3905 3908 
> 3911 3916 3917 3918 3937 3946 3949 3962 3964 3969 3971 3980 4001 4024 4036 4040 4051 4052 4058 4060 4062 4
> 066 4072 4077 4078 4087 4090 4091 4093 4108 4115 4121 4124 4127 4128 4130 4145 4156 4160 4162 4166 4182 41
> 86 4189 4191 4194 4199 4222 4223 4225 4241 4242 4251 4273 4274 4275 4279 4321 4322 4328 4331 4340 4352 436
> 7 4369 4372 4374 4381 4383 4390 4409 4415 4418 4423 4430 4434 4448 4450 4456 4460 4467 4476 4477 4491 4494
>  4496 4497 4498 4503 4510 4515 4523 4546 4556 4560 4569 4572 4579 4585 4595 4598 4600 4608 4611 4623 4641 
> 4645 4671 4675 4719 4731 4759 4768 4771 4790 4801 4802 4806 4807 4809 4818 4826 4830 4834 4839 4843 4844 4
> 847 4854 4860 4864 4881 4900 4903 4911 4918 4936 4941 4961 4988 4990 4993 5018 5020 5032 5038 5046 5047 50
> 50 5066 5071 5073 5074 5079 5087 5109 5111 5116 5122 5125 5129 5142 5165 5166 5169 5174 5179 5187 5210 521
> 1 5215 5218 5229 5237 5252 5253 5254 5256 5284 5301 5306 5327 5330 5334 5336 5338 5340 5374 5377 5379 5404
>  5405 5421 5422 5439 5442 5456 5458 5465 5475 5476 5485 5492 5496 5505 5518 5520 5523 5530 5539 5559 5560 
> 5567 5568 5569 5572 5578 5581 5589 5594 5597 5614 5621 5626 5643 5667 5671 5680 5686 5687 5690 5697 5709 5
> 721 5723 5742 5764 5774 5782 5783 5788 5791 5792 5802 5811 5818 5824 5826 5831 5841 5847 5848 5870 5878 58
> 85 5888 5899 5901 5902 5918 5932 5944 5961 5962 5973 5977 5978 5980 5987 6003 6008 6013 6020 6021 6025 603
> 3 6034 6035 6036 6039 6047 6053 6066 6078 6081 6096 6097 6102 6104 6109 6110 6115 6116 6125 6130 6136 6152
>  6158 6159 6169 6171 6185 6194 6196 6207 6214 6215 6216 6223 6226 6242 6266 6268 6272 6301 6304 6307 6308 
> 6310 6311 6314 6315 6326 6334 6335 6338 6346 6347 6349 6357 6362 6370 6375 6376 6379 6386 6410 6416 6428 6
> 431 6435 6437 6461 6471 6475 6492 6497 6500 6502 6509 6527 6529 6532 6534 6543 6552 6565 6571 6573 6574 65
> 88 6598 6617 6619 6639 6649 6669 6678 6682 6694 6707 6716 6717 6722 6730 6731 6733 6737 6740 6744 6745 675
> 6 6765 6768 6774 6788 6797 6799 6803 6809 6821 6825 6829 6830 6831 6836 6839 6841 6845 6848 6865 6867 6900
>  6908 6924 6932 6936 6948 6963 6981 6994 6995 7007 7022 7066 7085 7092 7106 7107 7121 7123 7124 7127 7132 
> 7137 7139 7143 7146 7152 7161 7163 7171 7179 7180 7185 7192 7203 7205 7208 7215 7228 7241 7245 7250 7251 7
> 257 7260 7268 7275 7278 7281 7291 7295 7300 7309 7316 7319 7329 7331 7336 7343 7344 7350 7357 7366 7368 73
> 90 7409 7416 7420 7435 7437 7466 7480 7481 7486 7503 7504 7506 7510 7512 7526 7536 7537 7556 7561 7566 757
> 4 7576 7585 7601 7617 7620 7635 7636 7646 7658 7662 7668 7672 7682 7685 7691 7692 7694 7696 7708 7718 7733
>  7741 7750 7759 7761 7762 7772 7773 7781 7798 7799 7809 7817 7824 7828 7835 7841 7849 7850 7853 7862 7863 
> 7866 7873 7875 7881 7882 7883 7892 7904 7911 7912 7917 7921 7923 7932 7936 7964 7970 7974 7977 7985 7991 7
> 993 7995 8001 8014 8017 8030 8045 8046 8047 8049 8050 8065 8068 8073 8079 8080 8084 8087 8092 8095 8099 81
> 05 8109 8113 8123 8133 8150 8151 8162 8163 8176 8184 8193 8194 8195 8199 8210 8213 8215 8219 8229 8247 825
> 0 8257 8264 8266 8272 8293 8304 8317 8333 8334 8336 8341 8348 8350 8357 8358 8365 8386 8387 8388 8402 8408
>  8423 8434 8440 8446 8455 8463 8465 8475 8479 8480 8484 8486 8512 8515 8524 8530 8536 8542 8543 8549 8551 
> 8559 8577 8582 8599 8606 8607 8627 8633 8637 8638 8655 8658 8675 8687 8692 8694 8699 8707 8717 8750 8755 8
> 759 8762 8792 8804 8810 8811 8812 8815 8819 8826 8832 8838 8846 8850 8852 8858 8859 8864 8867 8872 8873 88
> 80 8881 8892 8901 8902 8912 8925 8947 8958 8964 8972 8974 8975 9004 9013 9016 9023 9051 9058 9063 9083 911
> 2 9113 9114 9132 9154 9170 9171 9173 9180 9186 9194 9203 9216 9217 9225 9230 9242 9258 9259 9281 9284 9289
>  9293 9298 9299 9302 9308 9311 9313 9319 9323 9324 9325 9332 9338 9340 9355 9359 9367 9371 9372 9382 9397 
> 9398 9402 9406 9411 9413 9443 9450 9459 9466 9472 9473 9481 9483 9490 9499 9505 9521 9538 9545 9555 9563 9
> 567 9589 9590 9599 9611 9614 9619 9635 9643 9650 9664 9679 9686 9698 9715 9718 9719 9742 9748 9761 9771 97
> 72 9774 9777 9778 9786 9799 9804 9812 9831 9835 9837 9841 9846 9849 9857 9859 9867 9872 9882 9890 9898 989
> 9 9904 9916 9919 9921 9922 9937 9939 9954 9969 9988 9999 10000 10002 10005 10008 10013 10030 10033 10044 1
> 0056 10073 10085 10097 10109 10115 10123 10150 10156 10159 10185 10190 10195 10198 10200 10211 10213 10221
>  10232 10235 10236 10238 10247 10252 10266 10271 10277 10286 10293 10296 10297 10301 10305 10306 10310 103
> 21 10331 10332 10345 10349 10353 10359 10361 10374 10379 10380 10382 10386 10391 10405 10411 10417 10420 1
> 0422 10426 10439 10441 10443 10453 10458 10466 10482 10484 10499 10507 10509 10519 10530 10532 10534 10540
>  10549 10550 10552 10553 10565 10567 10574 10576 10580 10581 10585 10588 10598 10609 10615 10618 10621 106
> 39 10656 10658 10685 10686 10726 10734 10735 10740 10743 10777 10789 10793 10795 10801 10813 10816 10827 1
> 0839 10840 10867 10877 10884 10902 10905 10906 10920 10974 10981 10983 10984 10990 10991 10993 10994 10999
>  11012 11017 11027 11032 11038 11040 11051 11056 11060 11065 11091 11094 11096 11113 11115 11124 11142 111
> 47 11161 11162 11169 11172 11178 11183 11185 11191 11213 11225 11228 11234 11236 11249 11257 11271 11286 1
> 1289 11291 11300 11302 11304 11310 11315 11328 11343 11351 11361 11366 11371 11372 11376 11407 11409 11446
>  11450 11455 11456 11465 11480 11499 11502 11506 11508 11509 11511 11531 11537 11538 11550 11558 11564 115
> 66 11573 11580 11584 11600 11609 11610 11618 11630 11641 11646 11649 11657 11669 11672 11694 11721 11722 1
> 1727 11747 11748 11768 11793 11796 11805 11811 11832 11836 11867 11872 11902 11903 11907 11908 11914 11919
>  11923 11925 11930 11934 11935 11940 11974 11976 11982 12044 12046 12047 12051 12053 12065 12077 12088 120
> 90 12091 12094 12096 12122 12123 12136 12139 12141 12142 12144 12156 12169 12171 12178 12180 12181 12183 1
> 2189 12200 12206 12210 12212 12214 12215 12216 12222 12233 12234 12236 12238 12250 12256 12262 12266 12274
>  12277 12304 12309 12321 12331 12338 12346 12352 12364 12377 12378 12379 12381 12382 12389 12390 12392 123
> 95 12396 12397 12400 12403 12421 12430 12433 12434 12435 12436 12441 12444 12445 12450 12458 12459 12460 1
> 2466 12471 12472 12479 12482 12516 12518 12519 12521 12540 12545 12548 12559 12568 12575 12576 12578 12581
>  12587 12592 12593 12597 12598 12615 12620 12621 12624 12625 12631 12634 12635 12669 12677 12684 12688 126
> 91 12697 12698 12711 12717 12718 12719 12722 12730 12756 12757 12762 12782 12785 12789 12791 12798 12799 1
> 2801 12804 12805 12815 12816 12821 12825 12828 12840 12845 12850 12852 12855 12868 12874 12877 12895 12898
>  12904 12913 12915 12924 12926 12942 12944 12945 12947 12964 12972 12992 12994 13003 13011 13013 13016 130
> 31 13032 13046 13049 13092 13119 13128 13135 13158 13163 13170 13172 13174 13184 13187 13193 13197 13198 1
> 3200 13219 13227 13228 13235 13239 13241 13286 13288 13311 13316 13318 13323 13326 13328 13329 13332 13340
>  13346 13351 13354 13365 13369 13375 13378 13380 13381 13406 13409 13417 13418 13431 13432 13437 13440 134
> 43 13474 13479 13480 13481 13498 13505 13525 13526 13531 13550 13554 13569 13570 13572 13582 13599 13600 1
> 3602 13608 13619 13623 13630 13645 13646 13670 13680 13693 13700 13704 13710 13712 13714 13733 13756 13759
>  13765 13782 13786 13789 13794 13798 13799 13800 13824 13828 13839 13864 13866 13906 13913 13915 13922 139
> 40 13941 13962 13963 13976 13990 14002 14007 14017 14027 14064 14083 14084 14108 14111 14113 14114 14145 1
> 4148 14150 14162 14163 14169 14170 14182 14221 14225 14227 14250 14252 14255 14285 14286 14290 14304 14309
>  14311 14324 14337 14359 14363 14369 14370 14378 14380 14382 14384 14385 14386 14412 14417 14418 14446 144
> 50 14477 14487 14490 14503 14512 14525 14535 14549 14554 14561 14563 14565 14578 14581 14582 14590 14603 1
> 4606 14616 14622 14623 14626 14629 14638 14650 14790 14793 14794 14808 14809 14810 14815 14832 14834 14835
>  14852 14863 14886 14891 14897 14898 14908 14913 14918 14923 14934 14938 14954 14960 14985 15027 15060 150
> 84 15087 15092 15106 15110 15113 15126 15133 15159 15160 15162 15173 15178 15203 15242 15247 15248 15253 1
> 5267 15274 15283 15290 15291 15293 15302 15306 15331 15337 15343 15346 15347 15354 15359 15404 15410 15414
>  15428 15443 15446 15459 15474 15495 15521 15708 15800 15822 15855 15859 16188 16394 16401 16420 16437 164
> 39 16453 16456 16477 16478 16488 16531 16597 16620 16650 16665 16710 16721 16729 16795 16813 16932 17101 1
> 7107 17164 17199 17202 17209 17232 17239 17341 17405 17440 17890 17932 18100 18364 18484 18560 18563 18654
>  18699 18705 19069 19103 19129 19152 19155 19209 19402 19427 19431 19433 19438 19557 19807 19911 19953 199
> 62 20021 20036 20064 20118 20134 20185 20202 20204 20217 20296 20423 20488 20519 20548 20653 20779 20783 2
> 0901 20904 20909 20983 20993 21116 21118 21136 21144 21151 21153 21186 21201 21204 21217 21232 21237 21238
>  21244 21252 21300 21345 21427 21429 21435 21440 21487 21488 21496 21505 21506 21507 21508 21519 21542 216
> 59 21663 21673 21685 21686 21743 21776 21777 21792 22008 22059 22140 22144 22205 22207 22221 22250 22260 2
> 2308 22325 22345 22360 22373 22447 22461 22496 22507 22528 22532 22536 22543 22612 22668 22681 22695 22729
>  22759 22765 22772 22794 22797 22810 22815 22817 22822 22823 22829 22861 22913 22946 22957 22962 22974 229
> 78 23002 23027 23034 23045 23050 23067 23080 23084 23088 23097 23113 23195 23197 23220 23224 23252 23275 2
> 3291 23387 23485 23486 23499 23528 23561 23577 23616 23697 23717 23753 23767 23769 23774 23776 23777 23790
>  23799 23809 23810 23812 23819 23852 23877 23898 23943 23945 23948 23961 23964 23988 23989 24008 24021 240
> 29 24032 24037 24040 24066 24069 24099 24101 24106 24110 24113 24157 24171 24184 24185 24186 24190 24197 2
> 4198 24204 24205 24216 24219 24220 24222 24224 24234 24283 24295 24302 24304 24315 24316 24338 24344 24350
>  24352 24353 24356 24375 24376 24378 24382 24386 24396 24405 24407 24409 24415 24419 24430 24432 24436 244
> 49 24463 24468 24474 24475 24478 24483 24486 24489 24491 24522 24531 24537 24538 24539 24543 24607 24610 2
> 4617 24620 24621 24637 24648 24660 24662 24668 24669 24670 24671 24686 24689 24699 24704 24720 24728 24749
>  24755 24771 24776 24782 24783 24792 24795 24800 24803 24810 24832 24837 24841 24842 24845 24849 24853 248
> 56 24870 24877 24878 24881 24888 24890 24893 24898 24909 24912 24922 24926 24934 24965 24971 24975 24978 2
> 4982 24988 24991 24996 25000 25004 25013 25017 25020 25025 25031 25033 25047 25056 25062 25069 25076 25079
>  25081 25088 25091 25095 25099 25108 25110 25111 25114 25115 25118 25119 25124 25130 25132 25138 25149 251
> 50 25152 25157 25164 25166 25167 25168 25180 25181 25186 25201 25202 25224 25234 25240 25241 25274 25279 2
> 5283 25285 25302 25312 25313 25314 25315 25318 25320 25331 25338 25341 25355 25357 25359 25375 25385 25390
>  25396 25399 25405 25406 25420 25422 25430 25431 25433 25434 25441 25460 25475 25480 25495 25509 25514 255
> 23 25540 25572 25579 25623 25631 25640 25670 25676 25680 25683 25688 25691 25694 25711 25726 25731 25737 2
> 5747 25749 25774 25777 25783 25789 25799 25804 25806 25807 25828 25844 25845 25848 25864 25870 25874 25880
>  25896 25899 25900 25906 25915 25918 25921 25922 25923 25924 25929 25944 25946 25956 25964 25972 25976 259
> 78 25979 25980 25987 25993 26004 26008 26011 26012 26013 26015 26019 26021 26034 26037 26039 26044 26045 2
> 6060 26061 26064 26069 26246 26360 26520 26523 26557 26582 26900 27199 27747 27760 27771 27776 27784 27786
>  27790 27793 27794 27810 27816 27823 27825 27828 27842 27845 27855 27873 27906 27913 27920 27921 27924 279
> 25 27928 27937 27938 27960 27965 27980 27981 27988 27991 27997 28003 28009 28016 28018 28064 28078 28118 2
> 8125 28130 28138 28139 28145 28147 28176 28177 28180 28182 28190 28194 28195 28206 28209 28214 28249 28250
>  28252 28256 28265 28266 28277 28285 28291 28295 28296 28303 28316 28317 28320 28325 28337 28338 28374 283
> 88 28397 28398 28403 28410 28414 28435 28460 28461 28462 28477 28488 28489 28501 28502 28504 28518 28524 2
> 8528 28546 28563 28564 28579 28585 28590 28597 28602 28616 28622 28623 28624 28641 28648 28668 28675 28678
>  28691 28700 28701 28704 28712 28717 28737 28742 28744 28749 28756 28758 28765 28770 28775 28781 28787 287
> 91 28795 28822 28848 28853 28877 28881 28884 28907 28917 28919 28924 28933 28937 28938 28940 28942 28947 2
> 8981 28983 29001 29015 29028 29029 29033 29040 29066 29069 29074 29075 29081 29085 29086 29095 29098 29105
>  29107 29108 29127 29129 29131 29133 29139 29143 29150 29151 29152 29156 29165 29167 29169 29170 29173 292
> 06 29217 29241 29250 29252 29264 29266 29268 29274 29278 29284 29287 29288 29304 29312 29323 29332 29339 2
> 9342 29344 29346 29347 29353 29356 29360 29374 29381 29382 29386 29390 29392 29396 29402 29406 29427 29433
>  29434 29435 29436 29449 29453 29459 29461 29496 29497 29511 29517 29594 29600 29608 29609 29612 29616 296
> 21 29626 29632 29634 29642 29643 29647 29661 29668 29669 29689 29698 29705 29706 29708 29709 29722 29728 2
> 9729 29733 29734 29736 29741 29746 29751 29755 29762 29768 29791 29803 29806 29818 29822 29823 29826 29829
>  29830 29837 29864 29870 29883 29886 29894 29900 29901 29904 29909 29910 29918 29921 29934 29939 29942 299
> 52 29953 29964 29965 29968 29992 29997 30005 30006 30007 30008 30009 30012 30016 30023 30025 30027 30029 3
> 0031 30032 30058 30059 30061 30087 30094 30098 30121 30130 30131 30137 30138 30152 30163 30169 30175 30177
>  30181 30191 30193 30205 30209 30219 30220 30225 30231 30233 30234 30236 30239 30247 30252 30254 30255 302
> 57 30259 30260 30265 30277 30281 30283 30310 30352 30358 30398 30399 30400 30420 30423 30463 30476 30477 3
> 0536 30540 30546 30557 30558 30559 30563 30565 30576 30584 30593 30599 30608 30612 30614 30618 30639 30649
>  30651 30660 30662 30666 30671 30674 30697 30701 30709 30710 30714 30718 30720 30751 30775 30781 30782 307
> 83 30789 30832 30835 30836 30843 30847 30861 30862 30866 30870 30877 30915 30925 30939 30945 30946 30948 3
> 0950 30964 30971 30994 31007 31018 31022 31037 31045 31057 31093 31099 31129 31143 31144 31147 31166 31168
>  31170 31193 31194 31195 31203 31204 31214 31223 31224 31300 31366 31381 31392 31403 31418 31423 31427 314
> 30 31448 31453 31454 31456 31459 31460 31474 31477 31479 31483 31488 31500 31517 31518 31530 31534 31551 3
> 1560 31567 31578 31587 31600 31607 31614 31619 31620 31622 31629 31634 31660 31674 31679 31683 31689 31693
>  31697 31700 31706 31720 31738 31743 31748 31750 31752 31754 31757 31761 31763 31791 31811 31843 31846 318
> 49 31854 31881 31887 32280 60796 60797 60798 60800 60801 60814 60835 60846 60847 60868 60875 60883 60887 6
> 0888 60894 60899 60901 60902 60906 60911 60920 60923 60931 60933 60939 60942 60950 60955 60969 60979 60992
>  60994 61028 61033 61048 61059 61060 61061 61065 61068 61069 61077 61088 61093 61095 61102 61108 61121 611
> 22 61140 61142 61151 61159 61166 61167 61171 61179 61181 61187 61192 61212 61255 61285 61296 61321 61325 6
> 1326 61332 61338 61339 61340 61349 61350 61355 61356 61359 61370 61372 61376 61396 61398 61399 61400 61401
>  61402 61404 61405 61407 61409 61410 61413 61414 61417 61418 61420 61421 61425 61427 61430 61435 61439 614
> 41 61445 61448 61476 61483 61489 61490 61496 61507 61508 61513 61516 61519 61523 61527 61531 61534 61541 6
> 1546 61553 61556 61557 61558 61560 61562 61566 61567 61570 61573 61574 61575 61576 61581 61583 61587 61591
>  61592 61596 61601 61610 61627 61635 61640 61641 61642 61644 61646 61655 61656 61662 61664 61676 61684 616
> 85 61689 61690 61694 61700 61703 61706 61709 61712 61717 61719 61721 61723 61725 61726 61730 61732 61745 6
> 1746 61752 61753 61755 61758 61760 61766 61793 61803 61811 61836 61859 61860 61871 61877 61880 61900 61901
>  61903 61925 61960 61971 61976 61980 61982 61984 61988 61996 62005 62016 62036 62037 62046 62057 62064 620
> 65 62073 62088 62093 62100 62101 62107 62109 62110 62117 62122 62133 62134 62135 62162 62167 62168 62169 6
> 2170 62201 62204 62217 62221 62225 62236 62237 62257 62261 62262 62263 62266 62268 62285 62302 62317 62336
>  62351 62374 62377 62378 62382 62388 62391 62395 62396 62399 62406 62439 62494 62495 62497 62501 62505 625
> 11 62515 62516 62525 62526 62549 62553 62555 62559 62564 62571 62581 62590 62592 62599 62602 62612 62613 6
> 2632 62634 62649 62650 62655 62666 62667 62683 62686 62688 62694 62698 62700 62702 62709 62715 62728 62730
>  62733 62738 62745 62748 62756 62768 62784 62804 62811 62821 62822 62823 62826 62829 62832 62836 62846 628
> 59 62864 62870 62874 62889 62911 62913 62921 62922 62923 62925 62928 62948 62954 62957 62960 62965 62966 6
> 2967 62975 62982 62984 62990 62995 63000 63004 63010 63018 63023 63026 63029 63030 63051 63052 63054 63059
>  63070 63077 63080 63081 63083 63084 63099 63100 63102 63109 63122 63123 63138 63154 63157 63161 63162 631
> 70 63172 63180 63181 63188 63194 63195 63233 63246 63252 63268 63290 63291 63297 63324 63338 63381 63384 6
> 3385 63386 63405 63417 63418 63422 63424 63447 63448 63454 63456 63460 63462 63466 63468 63470 63474 63483
>  63498 63500 63504 63520 63522 63525 63527 63559 63572 63593 63596 63600 63602 63604 63605 63606 63607 636
> 17 63621 63635 63640 63643 63644 63648 63650 63651 63657 63662 63663 63666 63667 63669 63676 63678 63679 6
> 3698 63700 63707 63708 63724 63739 63740 63742 63757 63758 63763 63766 63768 63771 63789 63800 63803 63804
>  63821 63822 63836 63848 63863 63866 63871 63881 63892 63895 63898 63901 63915 63919 63927 63930 63938 639
> 41 63942 63945 63951 63952 63953 63956 63959 63972 63976 63979 63980 63984 63986 63996 64004 64016 64029 6
> 4030 64041 64048 64049 64051 64055 64061 64063 64088 64099 64102 64103 64127 64130 64135 64156 64160 64162
>  64163 64165 64166 64173 64175 64223 64254 64275 64279 64282 64296 64302 64304 64314 64319 64327 64334 643
> 41 64344 64346 64351 64356 64360 64363 64371 64375 64383 64387 64392 64397 64402 64408 64412 64418 64423 6
> 4433 64455 64485 64486 64497 64515 64528 64535 64550 64568 64583 64595 64602 64606 64626 64630 64637 64639
>  64663 64680 64688 64708 64741 64760 64767 64780 64820 64830 64839 64848 64853 64857 64884 64891 64896 649
> 01 64902 64915 64918 64919 64929 64939 64942 64955 64964 64993 64994 64997 65006 65009 65011 65014 65021 6
> 5026 65031 65034 65042 65045 65072 65088 65105 65107 65124 65128 65134 65142 65145 65158 65169 65180 65215
>  65217 65218 65220 65226 65236 65242 65243 65244 65247 65268 65270 65275 65286 65287 65313 65317 65343 653
> 68 65376 65389 65399 65413 65421 65430 65440 65457 65459 65463 65469 65474 65482 65484 65491 65494 65519 6
> 5527 65550 65552 65553 65554 65569 65578 65587 65590 65607 65609 65622 65630 65655 65665 65670 65671 65676
>  65679 65681 65702 65703 65718 65732 65739 65765 65768 65771 65803 65827 65831 65841 65850 65872 65881 658
> 87 65893 65896 65897 65899 65904 65905 65908 65911 65923 65930 65948 65949 65967 65973 65979 66016 66032 6
> 6050 66059 66061 66062 66070 66073 66114 66275 66278 66290 66300 66360 66366 66367 66371 66379 66386 66393
>  66403 66404 66425 66435 66455 66459 66465 66468 66496 66507 66519 66526 66530 66582 66586 66602 66610 666
> 30 66631 66646 66660 66682 66697 66698 66708 66723 66728 105936 106254 106418 107446 107672 108846 109079 
> 109084 109186 109189 109423 109425 109580 109581 109826 109919 109925 110039 110160 110330 110387 110529 1
> 10533 110560 110679 110721 110728 110732 110760 110801 110802 111000 111020 111103 111287 111488 111490 11
> 1491 111492 111493 111532 111579 111662 111723 111839 111864 111868 111873 111961 112004 112030 112033 112
> 034 112088 112111 112168 112178 112185 112401 112473 112552 112623 112624 112718 112720 112752 112759 1127
> 74 112775 112874 112876 112878 112888 112968 113141 113178 113269 113270 113272 113361 113362 113425 11343
> 9 113533 113609 114370 114524 115313 115404 115872 116245 116503 116504 116610 116770 116772 116787 116857
>  117036 117114 117146 117768 117861 117862 117902 118003 118081 118084 118121 118223 118267 118307 118321 
> 118445 118502 118577 118738 118793 118795 119034 119173 119216 119275 119316 119417 119493 119574 119736 1
> 19753 119893 119955 120048 120093 120134 120297 120300 120301 120302 120359 120444 120455 120456 120513 12
> 0557 120634 120773 120816 120824 120839 121053 121077 121080 121139 121142 121153 121257 121382 121440 121
> 493 121656 121662 121673 121718 121720 121759 121817 121819 121834 121840 121842 121844 121934 121938 1219
> 79 122061 122078 122096 122099 122101 122159 122172 122175 122255 122257 122263 122315 122355 122358 12236
> 0 122380 122394 122447 122514 122674 122734 122741 122778 122841 122902 122917 123016 123017 123094 123435
>  123937 123995 123998 124038 124196 124254 124319 124320 124322 124359 124361 124374 124435 124442 124599 
> 124636 124638 124678 125014 125237 125240 125274 125276 125533 125601 125604 126020 126056 126314 126322 1
> 26417 126423 126424 126434 126454 126496 126597 126599 126600 126601 126615 126714 126718 126721 126722 12
> 7075 127094 127279 127378 127436 127438 127455 127462 127480 127481

. display "Number of firms in reg1: " wordcount("`firms_reg1'")
Number of firms in reg1: 3896

. 
. probit lineofcredit_rs lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash lag_net_worth ///
>     lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age i.fyear ///
>     ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 if randomsample==1, clust
> er(gvkey) 

note: ind_dummy8 omitted because of collinearity.
Iteration 0:  Log pseudolikelihood = -956.91351  
Iteration 1:  Log pseudolikelihood = -670.24611  
Iteration 2:  Log pseudolikelihood = -665.95267  
Iteration 3:  Log pseudolikelihood =  -665.8774  
Iteration 4:  Log pseudolikelihood = -665.87736  

Probit regression                                       Number of obs =  1,723
                                                        Wald chi2(21) =      .
                                                        Prob > chi2   =      .
Log pseudolikelihood = -665.87736                       Pseudo R2     = 0.3041

                                                    (Std. err. adjusted for 257 clusters in gvkey)
--------------------------------------------------------------------------------------------------
                                 |               Robust
                 lineofcredit_rs | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
---------------------------------+----------------------------------------------------------------
       lag_EBITDA_to_assets_cash |    .580202   .2625209     2.21   0.027     .0656705    1.094733
                    lag_tangible |   .1493766   .3814258     0.39   0.695    -.5982041    .8969574
              lag_ln_assets_cash |   .1338835   .0585063     2.29   0.022     .0192131    .2485538
                   lag_net_worth |  -.9128912   .1411828    -6.47   0.000    -1.189604   -.6361779
lag_market_to_book_cash_adjusted |   -.002866   .0086783    -0.33   0.741    -.0198751    .0141431
         lag_industry_volatility |  -2.023497   2.435511    -0.83   0.406     -6.79701    2.750017
                           sp500 |   .1705164   .1709811     1.00   0.319    -.1646003    .5056331
                             otc |   .0549859   .1533638     0.36   0.720    -.2456016    .3555733
                    lag_firm_age |  -.4215857    .167234    -2.52   0.012    -.7493582   -.0938131
                                 |
                           fyear |
                           1997  |   .0346913   .1206587     0.29   0.774    -.2017955     .271178
                           1998  |    .027947   .1298094     0.22   0.830    -.2264748    .2823687
                           1999  |  -.0306411   .1399019    -0.22   0.827    -.3048438    .2435617
                           2000  |  -.0141849   .1586591    -0.09   0.929     -.325151    .2967813
                           2001  |  -.1752928    .150351    -1.17   0.244    -.4699753    .1193898
                           2002  |   -.128828   .1692723    -0.76   0.447    -.4605957    .2029396
                           2003  |  -.3500841   .2000168    -1.75   0.080    -.7421098    .0419415
                                 |
                      ind_dummy1 |   .5842869   .4045307     1.44   0.149    -.2085786    1.377152
                      ind_dummy2 |   .7310649   .1772821     4.12   0.000     .3835984    1.078531
                      ind_dummy3 |    .027825   .4921695     0.06   0.955    -.9368094    .9924594
                      ind_dummy4 |   1.542235   .3834798     4.02   0.000     .7906285    2.293842
                      ind_dummy6 |   1.239088   .4191838     2.96   0.003     .4175028    2.060673
                      ind_dummy7 |   .4420083   .2271298     1.95   0.052    -.0031579    .8871744
                      ind_dummy8 |          0  (omitted)
                           _cons |   1.181294   .5176648     2.28   0.022     .1666897    2.195898
--------------------------------------------------------------------------------------------------

. est store reg2

. 
. levelsof gvkey if e(sample), local(firms_reg2)
1034 1246 1279 1410 1613 1856 1860 1974 2033 2136 2222 2290 2393 2448 2556 2573 2581 2807 2950 2951 3031 313
> 4 3156 3246 3311 3533 3570 3734 3756 3964 4160 4186 4191 4328 4623 4911 4961 5020 5038 5050 5129 5301 5442
>  5496 5505 5690 5774 6036 6039 6053 6078 6207 6242 6304 6308 6314 6335 6346 6376 6694 6733 6836 7466 7682 
> 7762 7817 8109 8150 8151 8707 8852 9058 9216 9311 9882 9922 9937 10030 10033 10198 10238 10411 10519 10567
>  11032 11113 11178 11304 11721 11722 11747 11793 12047 12396 12403 12519 12717 12722 12840 13418 13525 136
> 70 13824 14002 14017 14311 14324 14380 14477 15347 16477 16597 17239 17440 19807 20118 20134 20488 20779 2
> 1116 21153 21238 21300 21496 21506 22260 22817 23080 23809 24184 24396 24489 24531 24881 24922 25017 25062
>  25108 25396 25406 25431 25572 25747 25848 25899 25964 26004 27760 27825 27925 28118 28130 28177 28249 282
> 77 28296 28624 28787 28791 28981 29098 29156 29170 29288 29608 29901 29921 30012 30031 30137 30255 30540 3
> 0584 30593 30660 30710 31018 31129 31144 31224 31300 31500 31629 31683 31754 60992 61407 61430 61435 61483
>  61490 61562 61664 61732 61900 61996 62073 62134 62162 62257 62336 62391 62494 62511 62590 62634 62649 626
> 98 62709 62925 62967 63004 63102 63123 63181 63188 63297 63604 63657 63666 63803 63836 63901 63915 63927 6
> 3986 64051 64223 64412 64455 65236 65242 65389 65413 65831 66061 66360 66455 66465 66496 110330 111579 111
> 868 112775 113362 113439 118267 119753 121142 121720 121817 121819 121834 125274 125533 126424 126454

. display "Number of firms in reg2: " wordcount("`firms_reg2'")
Number of firms in reg2: 257

. 
. quietly reg total_line_total_line_cash lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash ///
>     lag_net_worth lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age ///
>     i.fyear ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 if randomsample==
> 1, cluster(gvkey)

. est store reg4

. 
. levelsof gvkey if e(sample), local(firms_reg4)
1034 1246 1279 1410 1613 1856 1860 1974 2033 2136 2222 2290 2393 2448 2556 2573 2581 2807 2950 2951 3031 313
> 4 3156 3246 3311 3533 3570 3734 3756 3964 4160 4186 4191 4328 4623 4911 4961 5020 5038 5050 5129 5301 5442
>  5496 5505 5690 5774 6036 6039 6053 6078 6207 6242 6304 6308 6314 6335 6346 6376 6694 6733 6836 7466 7682 
> 7762 7817 8109 8150 8151 8707 8852 9058 9216 9311 9882 9922 9937 10030 10033 10198 10238 10411 10519 10567
>  11032 11113 11178 11304 11721 11722 11747 11793 12047 12396 12403 12519 12717 12722 12840 13418 13525 136
> 70 13824 14002 14017 14311 14324 14380 14477 15347 16477 16597 17239 17440 19807 20118 20134 20488 20779 2
> 1116 21153 21238 21300 21496 21506 22260 22817 23080 23809 24184 24396 24489 24531 24881 24922 25017 25062
>  25108 25396 25406 25431 25572 25747 25848 25899 25964 26004 27760 27825 27925 28118 28130 28177 28249 282
> 77 28296 28624 28787 28791 28981 29098 29156 29170 29288 29608 29901 29921 30012 30031 30137 30255 30540 3
> 0584 30593 30660 30710 31018 31129 31144 31224 31300 31500 31629 31683 31754 60992 61407 61430 61435 61483
>  61490 61562 61664 61732 61900 61996 62073 62134 62162 62257 62336 62391 62494 62511 62590 62634 62649 626
> 98 62709 62925 62967 63004 63102 63123 63181 63188 63297 63604 63657 63666 63803 63836 63901 63915 63927 6
> 3986 64051 64223 64412 64455 65236 65242 65389 65413 65831 66061 66360 66455 66465 66496 110330 111579 111
> 868 112775 113362 113439 118267 119753 121142 121720 121817 121819 121834 125274 125533 126424 126454

. display "Number of firms in reg4: " wordcount("`firms_reg4'")
Number of firms in reg4: 257

. 
. quietly reg total_line_total_line_cash lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash ///
>     lag_net_worth lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age ///
>     i.fyear ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 ///
>     if lineofcredit_rs==1 & randomsample==1, cluster(gvkey) robust

. est store reg5

. 
. levelsof gvkey if e(sample), local(firms_reg5)
1034 1246 1279 1410 1613 1860 1974 2033 2136 2222 2290 2393 2448 2556 2581 2807 2950 2951 3031 3134 3156 324
> 6 3311 3533 3570 3734 3756 3964 4160 4186 4191 4328 4623 4911 4961 5038 5050 5129 5301 5442 5496 5505 5690
>  5774 6036 6039 6053 6078 6207 6242 6304 6308 6314 6335 6346 6376 6694 6733 6836 7466 8109 8150 8151 8707 
> 8852 9058 9216 9311 9882 9922 9937 10030 10033 10198 10238 10411 10519 10567 11032 11113 11178 11304 11721
>  11722 11747 11793 12047 12396 12403 12722 13418 13525 13670 13824 14002 14311 14380 14477 15347 16477 165
> 97 17239 17440 19807 20118 20134 20488 20779 21116 21238 21300 21496 21506 22260 23080 23809 24184 24396 2
> 4531 24922 25017 25062 25108 25396 25406 25431 25572 25747 25848 25899 25964 26004 27760 27825 27925 28118
>  28130 28249 28277 28296 28624 28787 28791 28981 29098 29156 29170 29288 29608 29901 29921 30012 30031 301
> 37 30540 30584 30593 30660 30710 31018 31500 31629 31683 60992 61407 61430 61435 61483 61562 61732 61900 6
> 1996 62134 62162 62494 62511 62590 62649 62698 62925 62967 63004 63102 63123 63181 63188 63297 63604 63657
>  63666 63803 63836 63901 63915 63927 63986 64051 64223 64455 65236 65389 65413 65831 66061 66360 66455 664
> 65 66496 110330 111579 111868 112775 113439 118267 119753 121142 121720 121817 121834 125274 125533 126424
>  126454

. display "Number of firms in reg5: " wordcount("`firms_reg5'")
Number of firms in reg5: 223

. 
. quietly reg unused_line_unused_line_cash lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash ///
>     lag_net_worth lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age ///
>     i.fyear ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 if randomsample==
> 1, cluster(gvkey) robust

. est store reg6

. 
. levelsof gvkey if e(sample), local(firms_reg6)
1034 1246 1279 1410 1613 1856 1860 1974 2033 2136 2222 2290 2393 2448 2556 2573 2581 2807 2950 2951 3031 313
> 4 3156 3246 3311 3533 3570 3734 3756 3964 4160 4186 4191 4328 4623 4911 4961 5020 5038 5050 5129 5301 5442
>  5496 5505 5690 5774 6036 6039 6053 6078 6207 6242 6304 6308 6314 6335 6346 6376 6694 6733 6836 7466 7682 
> 7762 7817 8109 8150 8151 8707 8852 9058 9216 9311 9882 9922 9937 10030 10033 10198 10238 10411 10519 10567
>  11032 11113 11178 11304 11721 11722 11747 11793 12047 12396 12403 12519 12717 12722 12840 13418 13525 136
> 70 13824 14002 14017 14311 14324 14380 14477 15347 16477 16597 17239 17440 19807 20118 20134 20488 20779 2
> 1116 21153 21238 21300 21496 21506 22260 22817 23080 23809 24184 24396 24489 24531 24881 24922 25017 25062
>  25108 25396 25406 25431 25572 25747 25848 25899 25964 26004 27760 27825 27925 28118 28130 28177 28249 282
> 77 28296 28624 28787 28791 28981 29098 29156 29170 29288 29608 29901 29921 30012 30031 30137 30255 30540 3
> 0584 30593 30660 30710 31018 31129 31144 31224 31300 31500 31629 31683 31754 60992 61407 61430 61435 61483
>  61490 61562 61664 61732 61900 61996 62073 62134 62162 62257 62336 62391 62494 62511 62590 62634 62649 626
> 98 62709 62925 62967 63004 63102 63123 63181 63188 63297 63604 63657 63666 63803 63836 63901 63915 63927 6
> 3986 64051 64223 64412 64455 65236 65242 65389 65413 65831 66061 66360 66455 66465 66496 110330 111579 111
> 868 112775 113362 113439 118267 119753 121142 121720 121817 121819 121834 125274 125533 126424 126454

. display "Number of firms in reg6: " wordcount("`firms_reg6'")
Number of firms in reg6: 257

. 
. quietly reg unused_line_unused_line_cash lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash ///
>     lag_net_worth lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age ///
>     i.fyear ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 ///
>     if lineofcredit_rs==1 & randomsample==1, cluster(gvkey) robust

. est store reg7

. 
. levelsof gvkey if e(sample), local(firms_reg7)
1034 1246 1279 1410 1613 1860 1974 2033 2136 2222 2290 2393 2448 2556 2581 2807 2950 2951 3031 3134 3156 324
> 6 3311 3533 3570 3734 3756 3964 4160 4186 4191 4328 4623 4911 4961 5038 5050 5129 5301 5442 5496 5505 5690
>  5774 6036 6039 6053 6078 6207 6242 6304 6308 6314 6335 6346 6376 6694 6733 6836 7466 8109 8150 8151 8707 
> 8852 9058 9216 9311 9882 9922 9937 10030 10033 10198 10238 10411 10519 10567 11032 11113 11178 11304 11721
>  11722 11747 11793 12047 12396 12403 12722 13418 13525 13670 13824 14002 14311 14380 14477 15347 16477 165
> 97 17239 17440 19807 20118 20134 20488 20779 21116 21238 21300 21496 21506 22260 23080 23809 24184 24396 2
> 4531 24922 25017 25062 25108 25396 25406 25431 25572 25747 25848 25899 25964 26004 27760 27825 27925 28118
>  28130 28249 28277 28296 28624 28787 28791 28981 29098 29156 29170 29288 29608 29901 29921 30012 30031 301
> 37 30540 30584 30593 30660 30710 31018 31500 31629 31683 60992 61407 61430 61435 61483 61562 61732 61900 6
> 1996 62134 62162 62494 62511 62590 62649 62698 62925 62967 63004 63102 63123 63181 63188 63297 63604 63657
>  63666 63803 63836 63901 63915 63927 63986 64051 64223 64455 65236 65389 65413 65831 66061 66360 66455 664
> 65 66496 110330 111579 111868 112775 113439 118267 119753 121142 121720 121817 121834 125274 125533 126424
>  126454

. display "Number of firms in reg7: " wordcount("`firms_reg7'")
Number of firms in reg7: 223

. 
. 
. /***********************************
> Export Table
> ***********************************/
. esttab reg1 reg2 reg4 reg5 reg6 reg7 using "${root}/output/table3_raw.tex", replace ///
>     keep(lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash lag_net_worth lag_market_to_book_cash_a
> djusted lag_industry_volatility sp500 otc lag_firm_age) /// Keep only xvariable coefficients
>     mgroups("Firm has line of credit{0,1} Probit (Marginal Effects)" ///
>             "Total line/(total line + cash) OLS" ///
>             "Unused line/(unused line + cash) OLS", ///
>             pattern(1 0 1 0 1 0)) /// Correct grouping
>     addnotes("Full = Full Sample, Random = Random Sample") ///
>     alignment(c) ///
>     b(3) se(3) /// Display coefficients and standard errors with 3 decimal places
>     booktabs ///
>     lines ///
>     label
(output written to /Users/devin/Desktop/BA952 Replication/Sufi/output/table3_raw.tex)

.         
. 
end of do-file

. 
. //************** Figure 1 **************//
. do"${root}/do_file/figure1.do"

. /**********************************************************************************************
> This script: 
> - Generates figure 1
> ***********************************************************************************************/
. 
. clear all

. set more off

. 
. use "${root}/prepared_data/sufi(2009).dta", clear

. 
. * Generate deciles for lag_EBITDA_to_assets_cash;
. xtile decile_ebitda = lag_EBITDA_to_assets_cash, nq(10)

. 
. * Calculate cash/assets ratio;
. gen cash_assets = che / at

. 
. * Compute average values by decile;
. collapse (mean) cash_assets line_credit = lineofcredit, by(decile_ebitda)

. 
. * plot
. twoway (connected cash_assets decile_ebitda, sort lpattern(dash) lcolor(black) ///
>         ylabel(0(0.1)0.6) ytitle("Cash/assets")) ///
>        (connected line_credit decile_ebitda, sort lpattern(solid) lcolor(black) ///
>         yaxis(2) ylabel(0(0.2)1, axis(2)) ytitle("Fraction with line of credit", axis(2))), ///
>        legend(order(1 "Average cash/assets" 2 "Fraction with line of credit") ///
>        col(2) position(bottom)) ///
>        xtitle("Deciles of EBITDA/(assets-cash)")

. graph export "${root}/output/Figure1.png", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/output/Figure1.png saved as PNG format

. 
end of do-file

. 
. //************** Appendix Table 1A **************//
. do"${root}/do_file/table1a.do"

. /**********************************************************************************************
> This script: 
> - Generates a table with Full Sample and Random Sample side by side with aligned variables.
> ***********************************************************************************************/
. clear all

. set more off

. 
. use "${root}/prepared_data/sufi(2009)_appendix.dta", clear

. 
. * Full sample and Random sample variable lists
. local fullsamplelist lineofcredit debt_to_assets EBITDA_to_assets_cash tangible_assets_to_assets_cash ///
>     net_worth assets_cash market_to_book_cash_adjusted scaled_industry_sale_volatility ///
>     scale_cash_flow_volatility sp500 otc firm_age

. 
. local randomsamplelist lineofcredit_rs total_line_assets unused_line_assets used_line_assets ///
>     debt_to_assets EBITDA_to_assets_cash tangible_assets_to_assets_cash net_worth assets_cash ///
>     market_to_book_cash_adjusted scaled_industry_sale_volatility scale_cash_flow_volatility ///
>     sp500 otc firm_age

. 
. * Set variable labels to match the required order and descriptions
. label variable lineofcredit "Has line of credit {0,1}"

. label variable lineofcredit_rs "Has line of credit {0,1}"  // Same label for Full and Random samples

. 
. label variable total_line_assets "Total line of credit/assets"

. label variable unused_line_assets "Unused line of credit/assets"

. label variable used_line_assets "Used line of credit/assets"

. label variable debt_to_assets "Book debt/assets"

. label variable EBITDA_to_assets_cash "EBITDA/(assets-cash)"

. label variable tangible_assets_to_assets_cash "Tangible assets/(assets-cash)"

. label variable net_worth "Net worth, cash adjusted"

. label variable assets_cash "Assets-cash"

. label variable market_to_book_cash_adjusted "Market-to-book, cash adjusted"

. label variable scaled_industry_sale_volatility "Industry sales volatility"

. label variable scale_cash_flow_volatility "Cash-flow volatility"

. label variable sp500 "Not in an S\&P index {0,1}"

. label variable otc "Traded over the counter {0,1}"

. label variable firm_age "Firm age (years since IPO)"

. 
. * Generate summary statistics for Full Sample
. estpost tabstat `fullsamplelist', statistics(mean median sd) columns(statistics)

Summary statistics: mean p50 sd
     for variables: lineofcredit debt_to_assets EBITDA_to_assets_cash tangible_assets_to_assets_cash net_wor
> th assets_cash market_to_book_cash_adjusted scaled_industry_sale_volatility scale_cash_flow_volatility sp5
> 00 otc firm_age

             |   e(mean)     e(p50)      e(sd) 
-------------+---------------------------------
lineofcredit |  .8258806          1   .3792204 
debt_to_as~s |  .2034534    .179343   .1796488 
EBITDA_to_~h |  .0563573    .124235   .2837325 
tangible_a~h |  .3489117   .2870081   .2452401 
   net_worth |  .7758767   .5930914   .5861428 
 assets_cash |  875.5853    124.481   1796.391 
market_to_~d |  4.430967   2.496401   6.824792 
scaled_ind~y |  .0010184   .0005614   .0009202 
scale_cash~y |  .0354786   .0134905   .0524803 
       sp500 |  .2261506          0   .4183469 
         otc |  .4250011          0   .4943539 
    firm_age |  6.220823          6   3.508743 

. est store a

. 
. * Generate summary statistics for Random Sample
. estpost tabstat `randomsamplelist' if randomsample==1, statistics(mean median sd) columns(statistics)

Summary statistics: mean p50 sd
     for variables: lineofcredit_rs total_line_assets unused_line_assets used_line_assets debt_to_assets EBI
> TDA_to_assets_cash tangible_assets_to_assets_cash net_worth assets_cash market_to_book_cash_adjusted scale
> d_industry_sale_volatility scale_cash_flow_volatility sp500 otc firm_age

             |   e(mean)     e(p50)      e(sd) 
-------------+---------------------------------
lineofcred~s |  .7607403          1   .4267727 
total_line~s |  .1630267   .1152339    .169354 
unused_lin~s |  .1048142   .0696156   .1245778 
used_line_~s |  .0582126          0   .0985781 
debt_to_as~s |  .2030491   .1820723   .1813701 
EBITDA_to_~h |  .0712199   .1267792   .2763333 
tangible_a~h |  .3497538   .3036687   .2300959 
   net_worth |  .7791204   .6038816     .57996 
 assets_cash |  899.3233    144.541   1813.409 
market_to_~d |  4.400922   2.513428   6.379429 
scaled_ind~y |  .0010869   .0005614   .0009719 
scale_cash~y |   .032746   .0134611   .0486631 
       sp500 |  .2491738          0   .4326777 
         otc |  .4282882          0   .4949943 
    firm_age |  6.054625          6   3.645065 

. est store b

. 
. * Create LaTeX table using esttab, with the specified order and group headers
. esttab a b using "${root}/output/table1a_raw.tex", ///
>     replace mtitles("\textbf{\emph{Full Sample}}" "\textbf{\emph{Random Sample}}") ///
>     collabels(\multicolumn{1}{c}{{Mean}} \multicolumn{1}{c}{{Median}} \multicolumn{1}{c}{{St.Dev}}) ///
>     cells("mean(fmt(3)) p50(fmt(3)) sd(fmt(3))") /// Use mean, median (p50), and standard deviation (sd)
>     label noobs booktabs ///
>     order(lineofcredit lineofcredit_rs total_line_assets unused_line_assets used_line_assets ///
>           debt_to_assets EBITDA_to_assets_cash tangible_assets_to_assets_cash net_worth ///
>           assets_cash market_to_book_cash_adjusted scaled_industry_sale_volatility ///
>           scale_cash_flow_volatility sp500 otc firm_age) ///
>     refcat(lineofcredit "\textit{Line of Credit Variables}" debt_to_assets "\textit{Firm Characteristics}"
> , nolabel) ///
>     alignment(c)  // Center-align the table content
(output written to /Users/devin/Desktop/BA952 Replication/Sufi/output/table1a_raw.tex)

. 
end of do-file

. 
. //************** Appendix Table 3A **************//
. do"${root}/do_file/table3a.do"

. /***********************************************************************************************
> This script: 
> Generate the Table 3 in Sufi(2009)
> ***********************************************************************************************/
. clear all

. set more off

. 
. use "${root}/prepared_data/sufi(2009)_appendix.dta", clear

. xtset gvkey fyear

Panel variable: gvkey (unbalanced)
 Time variable: fyear, 1996 to 2003, but with gaps
         Delta: 1 unit

. misstable summarize
                                                               Obs<.
                                                +------------------------------
               |                                | Unique
      Variable |     Obs=.     Obs>.     Obs<.  | values        Min         Max
  -------------+--------------------------------+------------------------------
          dcvt |        59              22,908  |   >500          0        4720
         pstkc |        20              22,947  |   >500         -7        2725
         pstkl |         1              22,966  |   >500          0        5442
        pstkrv |         1              22,966  |   >500          0        5442
          txdb |       267              22,700  |   >500          0       36713
        prcc_f |         1              22,966  |   >500       .001       791.4
       ipodate |    11,256              11,711  |   >500      -5100       22179
   ln_firm_age |        11              22,956  |     59          0    4.043051
  lag_scale_~y |       867              22,100  |   >500   .0000553    220.4602
  lag_indust~y |       867              22,100  |     64   .0001073    .0096333
        lineun |    21,454               1,513  |   >500          0       10400
          line |    21,454               1,513  |   >500          0        4755
       linetot |    21,454               1,513  |   >500          0       14671
  lineofcred~s |    21,454               1,513  |      2          0           1
           def |    21,454               1,513  |      2          0           1
  total_line~s |    21,454               1,513  |   >500          0    1.172088
  used_line_~s |    21,454               1,513  |   >500          0    .6727301
  total_line~h |    21,454               1,513  |   >500          0           1
  unused_lin~s |    21,454               1,513  |   >500          0    .9916012
  unused_lin~h |    21,454               1,513  |   >500          0           1
  -----------------------------------------------------------------------------

. 
. /***********************************
> Regression
> ***********************************/
. 
. /***********************************
> Regression and Calculate Number of Firms
> ***********************************/
. 
. quietly probit lineofcredit lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash lag_net_worth ///
>     lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age i.fyear ///
>     ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8, vce(cluster gvkey) 

. est store reg1

. 
. levelsof gvkey if e(sample), local(firms_reg1)
1004 1021 1034 1045 1050 1056 1072 1076 1078 1082 1094 1099 1104 1109 1111 1115 1161 1164 1173 1209 1210 121
> 3 1228 1230 1239 1240 1244 1246 1254 1259 1266 1274 1279 1281 1300 1318 1324 1327 1356 1359 1360 1380 1393
>  1397 1408 1410 1439 1440 1444 1468 1478 1496 1500 1511 1518 1523 1530 1542 1554 1559 1562 1577 1581 1585 
> 1593 1598 1602 1606 1613 1618 1632 1633 1635 1650 1655 1659 1663 1669 1677 1678 1682 1686 1690 1704 1722 1
> 728 1766 1773 1783 1786 1794 1797 1820 1823 1837 1848 1856 1860 1864 1866 1875 1878 1884 1891 1902 1906 19
> 13 1914 1926 1951 1968 1969 1971 1974 1979 1981 1992 1995 2008 2033 2034 2044 2049 2052 2054 2058 2061 207
> 3 2080 2085 2086 2101 2111 2124 2136 2138 2146 2150 2154 2163 2175 2189 2193 2213 2220 2222 2230 2237 2240
>  2246 2251 2255 2259 2270 2282 2285 2290 2295 2299 2309 2312 2322 2328 2337 2342 2346 2352 2390 2393 2402 
> 2403 2435 2437 2444 2448 2461 2482 2484 2489 2490 2497 2498 2518 2519 2536 2537 2538 2555 2556 2561 2562 2
> 573 2574 2577 2581 2589 2593 2595 2596 2602 2606 2615 2628 2663 2710 2751 2783 2787 2797 2802 2803 2807 28
> 11 2818 2829 2845 2847 2856 2859 2860 2870 2884 2888 2889 2897 2903 2909 2916 2929 2938 2940 2942 2950 295
> 1 2953 2955 2960 2965 2982 2986 2991 2999 3007 3026 3028 3031 3036 3048 3054 3055 3062 3063 3078 3087 3093
>  3099 3103 3105 3107 3114 3116 3121 3129 3138 3144 3153 3157 3158 3170 3171 3203 3218 3226 3229 3246 3248 
> 3255 3265 3273 3275 3277 3282 3291 3297 3311 3333 3334 3336 3342 3354 3358 3366 3367 3369 3376 3384 3391 3
> 393 3394 3416 3422 3424 3465 3480 3502 3504 3505 3532 3570 3574 3580 3584 3594 3607 3618 3619 3622 3639 36
> 47 3650 3662 3673 3691 3700 3707 3734 3756 3761 3785 3793 3796 3798 3806 3807 3814 3824 3833 3840 3851 385
> 5 3863 3872 3886 3897 3905 3908 3911 3916 3917 3918 3937 3946 3949 3962 3964 3969 3971 3980 4001 4024 4036
>  4040 4051 4052 4058 4060 4062 4066 4072 4077 4078 4087 4090 4091 4093 4108 4115 4121 4124 4127 4128 4130 
> 4145 4156 4160 4162 4166 4182 4186 4189 4191 4194 4199 4222 4223 4241 4242 4251 4273 4274 4275 4279 4321 4
> 328 4331 4352 4367 4369 4372 4374 4381 4383 4390 4409 4415 4418 4423 4430 4434 4448 4450 4456 4460 4467 44
> 76 4477 4491 4494 4496 4497 4498 4503 4510 4515 4523 4546 4556 4560 4579 4585 4595 4598 4600 4608 4611 464
> 5 4671 4675 4719 4731 4759 4768 4790 4801 4802 4807 4809 4818 4826 4830 4834 4839 4843 4844 4847 4860 4864
>  4881 4903 4911 4918 4936 4941 4961 4988 4990 4993 5018 5020 5032 5046 5047 5066 5071 5073 5074 5079 5087 
> 5109 5116 5122 5125 5129 5142 5165 5169 5174 5179 5187 5210 5211 5218 5229 5237 5252 5253 5254 5256 5284 5
> 301 5306 5327 5330 5334 5336 5338 5340 5374 5377 5379 5404 5405 5421 5422 5439 5442 5456 5458 5465 5475 54
> 76 5492 5496 5505 5518 5520 5523 5530 5539 5559 5560 5567 5569 5572 5578 5581 5589 5594 5597 5614 5621 562
> 6 5643 5667 5671 5680 5686 5687 5690 5697 5709 5721 5742 5764 5774 5782 5783 5788 5791 5792 5802 5811 5818
>  5824 5826 5831 5841 5847 5848 5870 5878 5885 5888 5899 5902 5918 5932 5944 5961 5962 5973 5977 5978 5980 
> 5987 6003 6008 6013 6020 6021 6025 6033 6036 6039 6047 6053 6066 6078 6081 6096 6097 6102 6104 6109 6110 6
> 115 6116 6125 6130 6136 6152 6158 6159 6169 6171 6185 6194 6196 6207 6214 6215 6216 6223 6242 6266 6268 62
> 72 6301 6304 6307 6308 6310 6311 6314 6326 6334 6335 6338 6346 6347 6349 6362 6375 6379 6386 6410 6416 643
> 1 6435 6437 6461 6471 6475 6492 6497 6500 6502 6509 6527 6529 6532 6534 6543 6552 6565 6571 6573 6574 6588
>  6598 6617 6619 6639 6649 6669 6678 6682 6694 6707 6716 6717 6722 6730 6731 6733 6737 6740 6744 6745 6756 
> 6765 6768 6774 6788 6797 6799 6803 6809 6821 6825 6829 6830 6831 6836 6839 6841 6845 6848 6865 6867 6900 6
> 924 6932 6936 6948 6963 6994 6995 7007 7022 7066 7106 7107 7121 7124 7127 7132 7137 7139 7143 7146 7152 71
> 61 7163 7171 7180 7185 7192 7203 7205 7208 7228 7241 7245 7251 7257 7260 7268 7275 7278 7281 7295 7300 730
> 9 7316 7319 7329 7331 7336 7343 7344 7350 7357 7366 7368 7390 7409 7416 7420 7435 7466 7480 7503 7504 7506
>  7510 7512 7526 7537 7556 7561 7566 7574 7576 7585 7617 7620 7635 7636 7658 7662 7668 7672 7682 7691 7692 
> 7694 7696 7708 7733 7741 7750 7759 7761 7762 7772 7773 7781 7798 7799 7809 7824 7828 7835 7841 7849 7850 7
> 853 7862 7863 7866 7873 7875 7881 7882 7883 7892 7904 7911 7912 7917 7921 7923 7932 7936 7964 7970 7974 79
> 77 7991 7993 7995 8001 8014 8017 8030 8045 8046 8047 8049 8050 8065 8068 8073 8079 8080 8084 8087 8092 809
> 5 8099 8105 8109 8113 8123 8133 8150 8151 8162 8163 8176 8184 8193 8194 8195 8199 8210 8213 8215 8219 8229
>  8247 8250 8257 8264 8266 8272 8293 8317 8333 8334 8336 8341 8350 8357 8358 8365 8386 8387 8388 8402 8408 
> 8423 8434 8440 8446 8455 8463 8465 8475 8479 8484 8486 8512 8515 8524 8530 8536 8542 8543 8549 8551 8559 8
> 577 8582 8599 8606 8627 8633 8637 8638 8655 8658 8675 8687 8692 8694 8699 8717 8750 8755 8759 8762 8792 88
> 04 8810 8811 8812 8815 8819 8826 8832 8838 8846 8850 8852 8858 8859 8864 8867 8872 8873 8880 8881 8892 890
> 1 8902 8912 8925 8947 8958 8972 8974 8975 9004 9023 9051 9058 9063 9083 9112 9113 9114 9132 9154 9170 9171
>  9173 9180 9194 9203 9216 9217 9225 9230 9242 9258 9259 9281 9284 9289 9293 9298 9299 9302 9308 9311 9313 
> 9319 9323 9324 9325 9332 9338 9340 9355 9359 9367 9371 9372 9382 9397 9398 9402 9406 9411 9413 9443 9450 9
> 459 9466 9472 9473 9481 9490 9499 9505 9521 9538 9545 9555 9563 9589 9590 9599 9611 9614 9619 9635 9643 96
> 50 9664 9679 9686 9698 9715 9718 9719 9742 9748 9761 9771 9772 9774 9777 9778 9786 9799 9804 9812 9831 983
> 5 9837 9841 9846 9849 9857 9859 9867 9882 9890 9899 9904 9916 9919 9921 9922 9939 9954 9969 9988 9999 1000
> 0 10002 10005 10008 10030 10033 10044 10056 10073 10085 10097 10109 10115 10123 10150 10156 10159 10190 10
> 195 10198 10200 10211 10213 10221 10232 10235 10236 10238 10247 10252 10266 10271 10277 10286 10293 10296 
> 10297 10301 10305 10306 10321 10331 10332 10345 10349 10353 10361 10374 10379 10382 10386 10391 10405 1041
> 1 10417 10420 10426 10439 10441 10443 10453 10458 10466 10482 10484 10499 10507 10509 10519 10530 10532 10
> 534 10540 10550 10552 10553 10565 10567 10576 10581 10585 10598 10609 10615 10618 10639 10656 10658 10685 
> 10686 10726 10734 10735 10740 10743 10777 10789 10793 10795 10801 10813 10816 10827 10840 10867 10877 1088
> 4 10902 10905 10906 10920 10981 10983 10984 10990 10991 10993 10994 10999 11012 11017 11027 11032 11038 11
> 051 11056 11060 11065 11091 11096 11113 11115 11147 11161 11162 11169 11178 11183 11185 11191 11213 11225 
> 11228 11234 11236 11249 11257 11271 11286 11289 11291 11300 11302 11304 11310 11315 11328 11343 11351 1136
> 1 11366 11376 11407 11409 11446 11450 11456 11465 11480 11499 11502 11506 11508 11509 11511 11531 11537 11
> 538 11550 11558 11564 11566 11573 11580 11584 11600 11609 11618 11630 11641 11646 11649 11657 11669 11672 
> 11694 11721 11722 11727 11747 11748 11768 11793 11796 11805 11811 11832 11836 11867 11872 11902 11903 1190
> 7 11908 11914 11919 11923 11925 11930 11934 11935 11940 11974 11976 11982 12044 12046 12047 12051 12053 12
> 065 12077 12088 12090 12091 12094 12096 12122 12123 12136 12139 12141 12142 12144 12156 12169 12171 12178 
> 12181 12183 12206 12210 12212 12215 12216 12222 12233 12234 12236 12250 12262 12266 12274 12277 12304 1230
> 9 12321 12331 12338 12346 12352 12364 12377 12378 12379 12381 12382 12389 12390 12392 12395 12396 12397 12
> 400 12403 12421 12433 12434 12435 12436 12441 12444 12445 12450 12458 12459 12460 12471 12472 12479 12482 
> 12516 12518 12519 12521 12540 12545 12568 12575 12576 12578 12581 12587 12597 12598 12615 12620 12621 1262
> 4 12625 12631 12634 12635 12669 12677 12684 12688 12691 12697 12711 12717 12718 12719 12722 12756 12757 12
> 762 12782 12785 12789 12799 12801 12804 12805 12815 12816 12821 12825 12828 12840 12845 12850 12852 12868 
> 12874 12877 12895 12898 12904 12913 12915 12926 12942 12944 12945 12947 12964 12972 12992 12994 13011 1301
> 6 13031 13032 13046 13049 13092 13128 13135 13158 13163 13170 13172 13174 13184 13187 13193 13197 13198 13
> 200 13219 13227 13235 13239 13241 13286 13288 13311 13316 13323 13326 13328 13329 13332 13340 13346 13351 
> 13354 13365 13369 13375 13378 13380 13381 13406 13409 13417 13418 13431 13432 13440 13443 13474 13480 1348
> 1 13498 13505 13525 13526 13531 13550 13554 13569 13570 13572 13582 13599 13600 13602 13608 13619 13623 13
> 630 13646 13670 13680 13693 13700 13710 13712 13714 13733 13756 13759 13765 13786 13789 13794 13798 13799 
> 13800 13824 13828 13839 13864 13866 13906 13913 13915 13922 13940 13941 13962 13976 14002 14007 14017 1402
> 7 14064 14083 14084 14108 14111 14113 14114 14145 14148 14150 14162 14163 14169 14170 14182 14221 14225 14
> 227 14250 14252 14255 14285 14286 14290 14304 14309 14311 14324 14337 14359 14363 14369 14370 14380 14382 
> 14384 14385 14386 14412 14417 14418 14446 14450 14477 14487 14490 14503 14512 14525 14535 14549 14554 1456
> 1 14563 14565 14578 14581 14582 14590 14606 14616 14622 14623 14626 14629 14638 14650 14790 14793 14794 14
> 808 14809 14810 14815 14832 14834 14835 14852 14863 14886 14891 14897 14898 14908 14918 14923 14934 14938 
> 14954 14960 14985 15027 15060 15084 15087 15092 15106 15110 15113 15159 15160 15162 15173 15178 15203 1524
> 2 15247 15248 15267 15274 15283 15290 15291 15293 15302 15306 15331 15337 15343 15346 15347 15354 15359 15
> 404 15410 15414 15428 15443 15446 15459 15474 15495 15521 15708 15800 15822 15855 15859 16188 16394 16401 
> 16420 16439 16453 16456 16477 16478 16488 16531 16597 16620 16650 16665 16710 16721 16795 16813 16932 1710
> 1 17107 17164 17199 17202 17209 17232 17239 17341 17405 17440 17890 18100 18364 18484 18560 18563 18699 18
> 705 19069 19103 19129 19152 19155 19209 19402 19427 19431 19433 19438 19557 19807 19962 20021 20036 20064 
> 20118 20134 20185 20202 20217 20296 20423 20488 20519 20548 20653 20779 20901 20904 20909 20983 20993 2111
> 6 21118 21136 21144 21153 21186 21201 21204 21217 21232 21237 21238 21244 21252 21300 21345 21427 21429 21
> 435 21440 21487 21488 21505 21506 21507 21508 21542 21659 21663 21673 21685 21686 21743 21776 21777 21792 
> 22059 22140 22144 22207 22221 22250 22260 22308 22325 22345 22373 22447 22461 22496 22507 22532 22536 2254
> 3 22612 22668 22681 22695 22729 22759 22765 22772 22794 22797 22810 22817 22822 22823 22829 22861 22913 22
> 946 22957 22962 22974 22978 23002 23027 23034 23067 23080 23084 23088 23113 23195 23197 23220 23224 23252 
> 23275 23291 23387 23485 23486 23528 23561 23577 23616 23697 23717 23753 23767 23769 23774 23776 23777 2379
> 0 23799 23809 23810 23812 23819 23852 23877 23898 23943 23945 23948 23961 23988 23989 24008 24021 24029 24
> 032 24037 24066 24069 24099 24101 24106 24110 24113 24157 24171 24184 24185 24186 24190 24197 24198 24204 
> 24216 24219 24220 24222 24224 24234 24283 24295 24302 24304 24315 24316 24338 24350 24352 24353 24356 2437
> 5 24376 24378 24382 24396 24405 24407 24409 24415 24419 24430 24432 24436 24449 24463 24474 24475 24478 24
> 483 24486 24491 24522 24531 24537 24538 24539 24543 24607 24610 24617 24620 24621 24637 24648 24660 24662 
> 24668 24669 24670 24671 24686 24689 24699 24704 24720 24728 24749 24755 24771 24776 24782 24783 24792 2479
> 5 24800 24803 24810 24832 24837 24841 24842 24845 24849 24853 24856 24870 24878 24881 24888 24890 24893 24
> 898 24909 24912 24922 24926 24934 24965 24975 24978 24982 24988 24991 24996 25000 25004 25013 25017 25020 
> 25025 25031 25033 25047 25056 25062 25069 25076 25079 25081 25088 25091 25095 25099 25108 25110 25111 2511
> 4 25115 25118 25124 25130 25132 25149 25150 25152 25157 25164 25166 25167 25168 25180 25181 25186 25201 25
> 202 25224 25234 25240 25241 25274 25283 25285 25302 25312 25313 25314 25315 25318 25320 25331 25338 25341 
> 25355 25357 25359 25375 25385 25396 25399 25406 25420 25422 25430 25431 25433 25434 25441 25460 25475 2548
> 0 25495 25509 25514 25523 25540 25572 25579 25631 25640 25670 25676 25680 25683 25688 25691 25711 25726 25
> 731 25737 25747 25749 25774 25777 25783 25789 25799 25804 25806 25807 25828 25844 25845 25848 25864 25870 
> 25874 25880 25896 25899 25906 25915 25918 25921 25922 25923 25929 25944 25946 25964 25972 25976 25978 2597
> 9 25980 25987 25993 26004 26011 26013 26015 26019 26021 26034 26039 26044 26045 26060 26061 26064 26069 26
> 246 26360 26520 26523 26582 26900 27199 27747 27760 27771 27776 27784 27786 27790 27794 27810 27816 27823 
> 27828 27842 27845 27855 27906 27913 27920 27921 27924 27925 27928 27937 27938 27960 27965 27980 27981 2798
> 8 27991 27997 28003 28009 28018 28064 28078 28118 28125 28138 28145 28147 28176 28182 28190 28194 28195 28
> 206 28209 28214 28249 28250 28252 28256 28265 28266 28277 28285 28291 28295 28296 28303 28316 28317 28320 
> 28325 28338 28374 28388 28397 28398 28403 28410 28414 28435 28460 28462 28477 28488 28501 28504 28518 2852
> 4 28528 28546 28563 28564 28579 28585 28590 28597 28602 28616 28622 28623 28624 28668 28675 28678 28691 28
> 700 28704 28712 28717 28737 28742 28744 28749 28756 28765 28770 28775 28781 28787 28791 28795 28822 28848 
> 28853 28877 28881 28884 28907 28917 28919 28924 28933 28937 28940 28942 28947 28981 28983 29001 29015 2902
> 8 29029 29033 29040 29066 29069 29074 29075 29081 29085 29086 29095 29098 29105 29107 29108 29127 29129 29
> 131 29133 29139 29143 29151 29152 29156 29165 29167 29169 29170 29173 29206 29217 29241 29250 29252 29264 
> 29266 29268 29274 29278 29284 29288 29312 29323 29332 29342 29344 29346 29347 29353 29356 29360 29374 2938
> 1 29382 29386 29390 29392 29396 29402 29406 29427 29433 29434 29435 29436 29449 29453 29459 29461 29496 29
> 497 29511 29517 29594 29600 29608 29609 29612 29616 29626 29634 29642 29643 29647 29661 29668 29669 29689 
> 29698 29705 29706 29708 29709 29728 29729 29733 29734 29736 29741 29746 29751 29755 29762 29768 29791 2980
> 3 29806 29818 29822 29823 29826 29829 29830 29837 29864 29870 29883 29886 29894 29900 29901 29904 29910 29
> 921 29934 29939 29953 29964 29968 29992 29997 30005 30006 30007 30009 30012 30023 30025 30027 30029 30031 
> 30032 30058 30059 30061 30087 30094 30098 30121 30130 30131 30138 30152 30163 30169 30175 30177 30191 3019
> 3 30209 30219 30220 30225 30231 30233 30234 30236 30239 30247 30252 30254 30255 30257 30259 30260 30265 30
> 277 30281 30283 30310 30352 30358 30398 30400 30423 30463 30476 30477 30536 30540 30546 30558 30559 30563 
> 30565 30576 30584 30593 30599 30608 30614 30618 30639 30649 30651 30662 30666 30671 30674 30697 30701 3070
> 9 30710 30714 30720 30751 30775 30781 30782 30783 30832 30835 30836 30843 30847 30861 30862 30866 30870 30
> 877 30915 30925 30939 30945 30946 30948 30950 30971 30994 31007 31018 31022 31037 31045 31057 31093 31099 
> 31129 31143 31144 31166 31168 31170 31193 31195 31203 31214 31223 31224 31300 31366 31423 31427 31430 3144
> 8 31453 31454 31456 31460 31474 31477 31479 31483 31488 31500 31517 31518 31530 31534 31560 31567 31587 31
> 600 31607 31614 31619 31620 31622 31629 31634 31660 31674 31679 31683 31689 31693 31697 31700 31706 31720 
> 31738 31743 31748 31750 31752 31754 31757 31761 31763 31811 31843 31846 31849 31854 31881 31887 32280 6079
> 6 60798 60800 60801 60814 60835 60846 60847 60875 60883 60887 60888 60894 60899 60901 60902 60906 60920 60
> 923 60931 60939 60942 60950 60955 60969 60979 60992 60994 61028 61033 61048 61059 61060 61065 61069 61077 
> 61088 61093 61095 61102 61108 61121 61122 61140 61142 61151 61159 61167 61171 61179 61181 61187 61192 6121
> 2 61285 61296 61321 61325 61326 61332 61339 61340 61349 61350 61355 61356 61359 61370 61372 61376 61396 61
> 398 61399 61400 61401 61402 61404 61405 61407 61409 61410 61413 61414 61418 61421 61425 61427 61430 61435 
> 61439 61441 61445 61448 61476 61483 61489 61490 61496 61507 61513 61519 61523 61527 61531 61534 61541 6154
> 6 61556 61557 61558 61562 61566 61567 61574 61575 61576 61581 61583 61587 61591 61592 61596 61601 61610 61
> 627 61635 61640 61641 61642 61644 61646 61655 61662 61664 61676 61684 61685 61689 61690 61694 61700 61703 
> 61706 61709 61712 61717 61719 61721 61723 61725 61726 61730 61732 61745 61746 61752 61755 61758 61766 6179
> 3 61803 61811 61859 61860 61871 61877 61880 61900 61901 61903 61925 61960 61976 61982 61984 61988 61996 62
> 005 62016 62036 62037 62046 62057 62064 62065 62073 62093 62100 62101 62107 62109 62117 62122 62133 62134 
> 62135 62167 62168 62169 62170 62201 62204 62217 62221 62236 62237 62257 62261 62262 62263 62266 62285 6230
> 2 62317 62336 62351 62374 62377 62378 62382 62388 62391 62395 62396 62399 62406 62439 62494 62495 62497 62
> 501 62505 62511 62515 62516 62525 62526 62549 62553 62555 62564 62571 62581 62590 62592 62602 62612 62613 
> 62634 62649 62650 62655 62666 62667 62683 62686 62694 62698 62700 62702 62709 62715 62728 62730 62733 6273
> 8 62745 62748 62756 62768 62784 62804 62811 62821 62826 62829 62836 62846 62859 62864 62870 62874 62889 62
> 911 62913 62921 62922 62923 62925 62928 62948 62954 62957 62960 62965 62966 62967 62984 62990 62995 63000 
> 63004 63018 63023 63026 63029 63030 63051 63052 63054 63059 63070 63077 63080 63081 63083 63084 63099 6310
> 0 63102 63109 63122 63123 63138 63154 63157 63161 63162 63170 63172 63180 63181 63188 63195 63233 63246 63
> 252 63268 63290 63291 63324 63338 63381 63384 63385 63405 63417 63418 63422 63424 63447 63448 63454 63456 
> 63460 63462 63466 63468 63470 63474 63483 63498 63500 63504 63520 63522 63525 63527 63559 63572 63593 6359
> 6 63600 63602 63604 63605 63606 63607 63617 63621 63635 63640 63643 63644 63648 63650 63657 63663 63667 63
> 669 63676 63678 63679 63698 63700 63707 63708 63724 63739 63740 63742 63757 63763 63766 63768 63771 63789 
> 63800 63803 63804 63836 63863 63866 63881 63892 63895 63898 63901 63915 63919 63927 63930 63938 63941 6394
> 2 63945 63951 63952 63953 63956 63959 63976 63979 63984 63986 63996 64004 64016 64029 64030 64048 64049 64
> 051 64055 64061 64063 64088 64099 64102 64103 64127 64130 64135 64160 64162 64163 64165 64166 64173 64175 
> 64254 64279 64282 64296 64302 64304 64314 64319 64327 64334 64341 64344 64346 64351 64356 64363 64371 6438
> 3 64392 64397 64402 64408 64412 64418 64423 64433 64455 64485 64486 64497 64515 64528 64535 64550 64568 64
> 583 64595 64602 64606 64626 64630 64637 64639 64680 64741 64760 64767 64780 64820 64830 64839 64848 64853 
> 64857 64884 64891 64896 64901 64902 64915 64918 64919 64929 64939 64942 64955 64993 64994 64997 65006 6500
> 9 65014 65021 65026 65034 65042 65045 65072 65088 65105 65107 65124 65128 65134 65142 65145 65158 65169 65
> 215 65217 65218 65220 65236 65242 65244 65247 65268 65270 65275 65287 65313 65317 65343 65368 65376 65389 
> 65399 65413 65421 65430 65440 65459 65463 65474 65482 65484 65491 65494 65519 65550 65552 65553 65554 6556
> 9 65578 65587 65590 65607 65609 65622 65630 65655 65665 65670 65671 65676 65679 65681 65702 65703 65718 65
> 732 65739 65765 65768 65771 65803 65827 65831 65841 65850 65872 65881 65893 65899 65904 65905 65908 65911 
> 65923 65930 65948 65949 65967 65973 65979 66016 66032 66050 66059 66061 66062 66073 66114 66275 66278 6629
> 0 66300 66360 66366 66367 66371 66379 66393 66403 66404 66425 66435 66459 66465 66468 66496 66507 66519 66
> 526 66530 66602 66610 66630 66631 66646 66660 66708 66723 66728 105936 106254 106418 107446 107672 108846 
> 109079 109084 109189 109425 109580 109581 109826 109919 109925 110039 110160 110330 110387 110529 110533 1
> 10560 110679 110721 110728 110732 110760 110802 111000 111020 111103 111287 111490 111491 111492 111532 11
> 1662 111723 111839 111864 111868 111873 112004 112030 112033 112034 112088 112111 112168 112178 112401 112
> 473 112552 112623 112624 112718 112752 112759 112774 112775 112874 112876 112878 112888 112968 113178 1132
> 69 113270 113272 113361 113362 113439 113609 114370 114524 115313 115404 115872 116245 116503 116504 11661
> 0 116770 116772 116787 116857 117036 117114 117146 117768 117861 117902 118003 118084 118121 118267 118307
>  118321 118445 118502 118577 118793 118795 119034 119173 119275 119316 119417 119574 119736 119753 119893 
> 119955 120048 120093 120134 120297 120300 120301 120302 120359 120444 120455 120513 120557 120634 120773 1
> 20816 120824 120839 121053 121077 121080 121139 121142 121153 121257 121440 121493 121656 121662 121673 12
> 1718 121720 121759 121817 121819 121840 121844 121934 121938 122078 122096 122099 122101 122159 122175 122
> 255 122263 122315 122355 122358 122360 122380 122394 122447 122514 122734 122741 122902 122917 123017 1230
> 94 123937 123995 123998 124038 124196 124254 124319 124320 124322 124359 124361 124374 124435 124442 12459
> 9 124636 124678 125014 125237 125240 125276 125533 125601 125604 126020 126056 126314 126322 126417 126423
>  126424 126434 126454 126496 126599 126601 126615 126714 126721 127075 127094 127378 127436 127455 127462 
> 127480 127481

. display "Number of firms in reg1: " wordcount("`firms_reg1'")
Number of firms in reg1: 3524

. 
. probit lineofcredit_rs lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash lag_net_worth ///
>     lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age i.fyear ///
>     ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 if randomsample==1, clust
> er(gvkey) 

note: ind_dummy8 omitted because of collinearity.
Iteration 0:  Log pseudolikelihood = -804.66304  
Iteration 1:  Log pseudolikelihood = -553.08617  
Iteration 2:  Log pseudolikelihood = -548.75351  
Iteration 3:  Log pseudolikelihood = -548.63591  
Iteration 4:  Log pseudolikelihood = -548.63549  
Iteration 5:  Log pseudolikelihood = -548.63549  

Probit regression                                       Number of obs =  1,462
                                                        Wald chi2(21) =      .
                                                        Prob > chi2   =      .
Log pseudolikelihood = -548.63549                       Pseudo R2     = 0.3182

                                                    (Std. err. adjusted for 232 clusters in gvkey)
--------------------------------------------------------------------------------------------------
                                 |               Robust
                 lineofcredit_rs | Coefficient  std. err.      z    P>|z|     [95% conf. interval]
---------------------------------+----------------------------------------------------------------
       lag_EBITDA_to_assets_cash |   .3065631   .3097261     0.99   0.322    -.3004889     .913615
                    lag_tangible |   .1724624   .4301488     0.40   0.688    -.6706136    1.015538
              lag_ln_assets_cash |   .1374173   .0630866     2.18   0.029     .0137698    .2610648
                   lag_net_worth |  -1.083405    .163094    -6.64   0.000    -1.403064   -.7637471
lag_market_to_book_cash_adjusted |   .0018577   .0103859     0.18   0.858    -.0184982    .0222137
         lag_industry_volatility |  -150.7552    126.558    -1.19   0.234    -398.8043    97.29386
                           sp500 |     .24709   .1784406     1.38   0.166    -.1026471    .5968271
                             otc |   .0589268    .168111     0.35   0.726    -.2705647    .3884183
                    lag_firm_age |  -.4419543   .1877433    -2.35   0.019    -.8099243   -.0739842
                                 |
                           fyear |
                           1997  |  -.0570079   .1443344    -0.39   0.693    -.3398981    .2258823
                           1998  |  -.0333046   .1744867    -0.19   0.849    -.3752923     .308683
                           1999  |  -.0826146   .1754624    -0.47   0.638    -.4265147    .2612854
                           2000  |  -.0942402   .1988986    -0.47   0.636    -.4840743     .295594
                           2001  |  -.2706223   .2003532    -1.35   0.177    -.6633074    .1220628
                           2002  |  -.2307409   .2098937    -1.10   0.272     -.642125    .1806432
                           2003  |  -.2948926   .2172703    -1.36   0.175    -.7207346    .1309494
                                 |
                      ind_dummy1 |  -.4385924   .9782733    -0.45   0.654    -2.355973    1.478788
                      ind_dummy2 |  -.3521616   1.020215    -0.35   0.730    -2.351747    1.647424
                      ind_dummy3 |  -.3263469   .6590529    -0.50   0.620    -1.618067    .9653732
                      ind_dummy4 |    .565412   1.070338     0.53   0.597    -1.532412    2.663236
                      ind_dummy6 |   .3283955   .6511575     0.50   0.614    -.9478498    1.604641
                      ind_dummy7 |  -.6810025   .9653734    -0.71   0.481    -2.573099    1.211095
                      ind_dummy8 |          0  (omitted)
                           _cons |   2.348925   1.172112     2.00   0.045     .0516281    4.646222
--------------------------------------------------------------------------------------------------

. est store reg2

. 
. levelsof gvkey if e(sample), local(firms_reg2)
1034 1246 1279 1410 1613 1856 1860 1974 2033 2136 2222 2290 2393 2448 2556 2573 2581 2807 2950 2951 3031 324
> 6 3311 3570 3734 3756 3964 4160 4186 4191 4328 4911 4961 5020 5129 5301 5442 5496 5505 5690 5774 6036 6039
>  6053 6078 6207 6242 6304 6308 6314 6335 6346 6694 6733 6836 7466 7682 7762 8109 8150 8151 8852 9058 9216 
> 9311 9882 9922 10030 10033 10198 10238 10411 10519 10567 11032 11113 11178 11304 11721 11722 11747 11793 1
> 2047 12396 12403 12519 12717 12722 12840 13418 13525 13670 13824 14002 14017 14311 14324 14380 14477 15347
>  16477 16597 17239 17440 19807 20118 20134 20488 20779 21116 21153 21238 21300 21506 22260 22817 23080 238
> 09 24184 24396 24531 24881 24922 25017 25062 25108 25396 25406 25431 25572 25747 25848 25899 25964 26004 2
> 7760 27925 28118 28249 28277 28296 28624 28787 28791 28981 29098 29156 29170 29288 29608 29901 29921 30012
>  30031 30255 30540 30584 30593 30710 31018 31129 31144 31224 31300 31500 31629 31683 31754 60992 61407 614
> 30 61435 61483 61490 61562 61664 61732 61900 61996 62073 62134 62257 62336 62391 62494 62511 62590 62634 6
> 2649 62698 62709 62925 62967 63004 63102 63123 63181 63188 63604 63657 63803 63836 63901 63915 63927 63986
>  64051 64412 64455 65236 65242 65389 65413 65831 66061 66360 66465 66496 110330 111868 112775 113362 11343
> 9 118267 119753 121142 121720 121817 121819 125533 126424 126454

. display "Number of firms in reg2: " wordcount("`firms_reg2'")
Number of firms in reg2: 232

. 
. quietly reg total_line_total_line_cash lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash ///
>     lag_net_worth lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age ///
>     i.fyear ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 if randomsample==
> 1, cluster(gvkey)

. est store reg4

. 
. levelsof gvkey if e(sample), local(firms_reg4)
1034 1246 1279 1410 1613 1856 1860 1974 2033 2136 2222 2290 2393 2448 2556 2573 2581 2807 2950 2951 3031 324
> 6 3311 3570 3734 3756 3964 4160 4186 4191 4328 4911 4961 5020 5129 5301 5442 5496 5505 5690 5774 6036 6039
>  6053 6078 6207 6242 6304 6308 6314 6335 6346 6694 6733 6836 7466 7682 7762 8109 8150 8151 8852 9058 9216 
> 9311 9882 9922 10030 10033 10198 10238 10411 10519 10567 11032 11113 11178 11304 11721 11722 11747 11793 1
> 2047 12396 12403 12519 12717 12722 12840 13418 13525 13670 13824 14002 14017 14311 14324 14380 14477 15347
>  16477 16597 17239 17440 19807 20118 20134 20488 20779 21116 21153 21238 21300 21506 22260 22817 23080 238
> 09 24184 24396 24531 24881 24922 25017 25062 25108 25396 25406 25431 25572 25747 25848 25899 25964 26004 2
> 7760 27925 28118 28249 28277 28296 28624 28787 28791 28981 29098 29156 29170 29288 29608 29901 29921 30012
>  30031 30255 30540 30584 30593 30710 31018 31129 31144 31224 31300 31500 31629 31683 31754 60992 61407 614
> 30 61435 61483 61490 61562 61664 61732 61900 61996 62073 62134 62257 62336 62391 62494 62511 62590 62634 6
> 2649 62698 62709 62925 62967 63004 63102 63123 63181 63188 63604 63657 63803 63836 63901 63915 63927 63986
>  64051 64412 64455 65236 65242 65389 65413 65831 66061 66360 66465 66496 110330 111868 112775 113362 11343
> 9 118267 119753 121142 121720 121817 121819 125533 126424 126454

. display "Number of firms in reg4: " wordcount("`firms_reg4'")
Number of firms in reg4: 232

. 
. quietly reg total_line_total_line_cash lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash ///
>     lag_net_worth lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age ///
>     i.fyear ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 ///
>     if lineofcredit_rs==1 & randomsample==1, cluster(gvkey) robust

. est store reg5

. 
. levelsof gvkey if e(sample), local(firms_reg5)
1034 1246 1279 1410 1613 1860 1974 2033 2136 2222 2290 2393 2448 2556 2581 2807 2950 2951 3031 3246 3311 357
> 0 3734 3756 3964 4160 4186 4191 4328 4911 4961 5129 5301 5442 5496 5505 5690 5774 6036 6039 6053 6078 6207
>  6242 6304 6308 6314 6335 6346 6694 6733 6836 7466 8109 8150 8151 8852 9058 9216 9311 9882 9922 10030 1003
> 3 10198 10238 10411 10519 10567 11032 11113 11178 11304 11721 11722 11747 11793 12047 12396 12403 12722 13
> 418 13525 13670 13824 14002 14311 14380 14477 15347 16477 16597 17239 17440 19807 20118 20134 20488 20779 
> 21116 21238 21300 21506 22260 23080 23809 24184 24396 24531 24922 25017 25062 25108 25396 25406 25431 2557
> 2 25747 25848 25899 25964 26004 27760 27925 28118 28249 28277 28296 28624 28787 28791 28981 29098 29156 29
> 170 29288 29608 29901 29921 30012 30031 30540 30584 30593 30710 31018 31500 31629 31683 60992 61407 61430 
> 61435 61483 61562 61732 61900 61996 62134 62494 62511 62590 62649 62698 62925 62967 63004 63102 63123 6318
> 1 63188 63604 63657 63803 63836 63901 63915 63927 63986 64051 64455 65236 65389 65413 65831 66061 66360 66
> 465 66496 110330 111868 112775 113439 118267 119753 121142 121720 121817 125533 126424 126454

. display "Number of firms in reg5: " wordcount("`firms_reg5'")
Number of firms in reg5: 201

. 
. quietly reg unused_line_unused_line_cash lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash ///
>     lag_net_worth lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age ///
>     i.fyear ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 if randomsample==
> 1, cluster(gvkey) robust

. est store reg6

. 
. levelsof gvkey if e(sample), local(firms_reg6)
1034 1246 1279 1410 1613 1856 1860 1974 2033 2136 2222 2290 2393 2448 2556 2573 2581 2807 2950 2951 3031 324
> 6 3311 3570 3734 3756 3964 4160 4186 4191 4328 4911 4961 5020 5129 5301 5442 5496 5505 5690 5774 6036 6039
>  6053 6078 6207 6242 6304 6308 6314 6335 6346 6694 6733 6836 7466 7682 7762 8109 8150 8151 8852 9058 9216 
> 9311 9882 9922 10030 10033 10198 10238 10411 10519 10567 11032 11113 11178 11304 11721 11722 11747 11793 1
> 2047 12396 12403 12519 12717 12722 12840 13418 13525 13670 13824 14002 14017 14311 14324 14380 14477 15347
>  16477 16597 17239 17440 19807 20118 20134 20488 20779 21116 21153 21238 21300 21506 22260 22817 23080 238
> 09 24184 24396 24531 24881 24922 25017 25062 25108 25396 25406 25431 25572 25747 25848 25899 25964 26004 2
> 7760 27925 28118 28249 28277 28296 28624 28787 28791 28981 29098 29156 29170 29288 29608 29901 29921 30012
>  30031 30255 30540 30584 30593 30710 31018 31129 31144 31224 31300 31500 31629 31683 31754 60992 61407 614
> 30 61435 61483 61490 61562 61664 61732 61900 61996 62073 62134 62257 62336 62391 62494 62511 62590 62634 6
> 2649 62698 62709 62925 62967 63004 63102 63123 63181 63188 63604 63657 63803 63836 63901 63915 63927 63986
>  64051 64412 64455 65236 65242 65389 65413 65831 66061 66360 66465 66496 110330 111868 112775 113362 11343
> 9 118267 119753 121142 121720 121817 121819 125533 126424 126454

. display "Number of firms in reg6: " wordcount("`firms_reg6'")
Number of firms in reg6: 232

. 
. quietly reg unused_line_unused_line_cash lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash ///
>     lag_net_worth lag_market_to_book_cash_adjusted lag_industry_volatility sp500 otc lag_firm_age ///
>     i.fyear ind_dummy1 ind_dummy2 ind_dummy3 ind_dummy4 ind_dummy6 ind_dummy7 ind_dummy8 ///
>     if lineofcredit_rs==1 & randomsample==1, cluster(gvkey) robust

. est store reg7

. 
. levelsof gvkey if e(sample), local(firms_reg7)
1034 1246 1279 1410 1613 1860 1974 2033 2136 2222 2290 2393 2448 2556 2581 2807 2950 2951 3031 3246 3311 357
> 0 3734 3756 3964 4160 4186 4191 4328 4911 4961 5129 5301 5442 5496 5505 5690 5774 6036 6039 6053 6078 6207
>  6242 6304 6308 6314 6335 6346 6694 6733 6836 7466 8109 8150 8151 8852 9058 9216 9311 9882 9922 10030 1003
> 3 10198 10238 10411 10519 10567 11032 11113 11178 11304 11721 11722 11747 11793 12047 12396 12403 12722 13
> 418 13525 13670 13824 14002 14311 14380 14477 15347 16477 16597 17239 17440 19807 20118 20134 20488 20779 
> 21116 21238 21300 21506 22260 23080 23809 24184 24396 24531 24922 25017 25062 25108 25396 25406 25431 2557
> 2 25747 25848 25899 25964 26004 27760 27925 28118 28249 28277 28296 28624 28787 28791 28981 29098 29156 29
> 170 29288 29608 29901 29921 30012 30031 30540 30584 30593 30710 31018 31500 31629 31683 60992 61407 61430 
> 61435 61483 61562 61732 61900 61996 62134 62494 62511 62590 62649 62698 62925 62967 63004 63102 63123 6318
> 1 63188 63604 63657 63803 63836 63901 63915 63927 63986 64051 64455 65236 65389 65413 65831 66061 66360 66
> 465 66496 110330 111868 112775 113439 118267 119753 121142 121720 121817 125533 126424 126454

. display "Number of firms in reg7: " wordcount("`firms_reg7'")
Number of firms in reg7: 201

. 
. 
. /***********************************
> Export Table
> ***********************************/
. esttab reg1 reg2 reg4 reg5 reg6 reg7 using "${root}/output/table3a_raw.tex", replace ///
>     keep(lag_EBITDA_to_assets_cash lag_tangible lag_ln_assets_cash lag_net_worth lag_market_to_book_cash_a
> djusted lag_industry_volatility sp500 otc lag_firm_age) /// Keep only xvariable coefficients
>     mgroups("Firm has line of credit{0,1} Probit (Marginal Effects)" ///
>             "Total line/(total line + cash) OLS" ///
>             "Unused line/(unused line + cash) OLS", ///
>             pattern(1 0 1 0 1 0)) /// Correct grouping
>     addnotes("Full = Full Sample, Random = Random Sample") ///
>     alignment(c) ///
>     b(3) se(3) /// Display coefficients and standard errors with 3 decimal places
>     booktabs ///
>     lines ///
>     label
(output written to /Users/devin/Desktop/BA952 Replication/Sufi/output/table3a_raw.tex)

.         
. 
end of do-file

. 
. //************** Appendix Figure 1a **************//
. do"${root}/do_file/figure1a.do"

. /**********************************************************************************************
> This script: 
> - Generates figure 1
> ***********************************************************************************************/
. 
. clear all

. set more off

. 
. use "${root}/prepared_data/sufi(2009)_appendix.dta", clear

. 
. * Generate deciles for lag_EBITDA_to_assets_cash;
. xtile decile_ebitda = lag_EBITDA_to_assets_cash, nq(10)

. 
. * Calculate cash/assets ratio;
. gen cash_assets = che / at

. 
. * Compute average values by decile;
. collapse (mean) cash_assets line_credit = lineofcredit, by(decile_ebitda)

. 
. * plot
. twoway (connected cash_assets decile_ebitda, sort lpattern(dash) lcolor(black) ///
>         ylabel(0(0.1)0.6) ytitle("Cash/assets")) ///
>        (connected line_credit decile_ebitda, sort lpattern(solid) lcolor(black) ///
>         yaxis(2) ylabel(0(0.2)1, axis(2)) ytitle("Fraction with line of credit", axis(2))), ///
>        legend(order(1 "Average cash/assets" 2 "Fraction with line of credit") ///
>        col(2) position(bottom)) ///
>        xtitle("Deciles of EBITDA/(assets-cash)")

. graph export "${root}/output/Figure1A.png", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/output/Figure1A.png saved as PNG format

. 
end of do-file

. 
. //************** Diagnostic **************//
. do"${root}/do_file/diagnostic.do"

. /***********************************************************************************************
> This script: 
> Check which firms are missing in this process and output results to LaTeX
> ***********************************************************************************************/
. use "${root}/prepared_data/sufi(2009).dta", clear 

. merge 1:1 gvkey fyear using "${root}/raw_data/sufi(2009).dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                         2,338
        from master                         0  (_merge==1)
        from using                      2,338  (_merge==2)

    Matched                            26,109  (_merge==3)
    -----------------------------------------

. keep if _merge == 2
(26,109 observations deleted)

. save "${root}/prepared_data/diagnostic.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/prepared_data/diagnostic.dta saved

. keep gvkey fyear

. duplicates drop

Duplicates in terms of all variables

(0 observations are duplicates)

. save "${root}/prepared_data/missinglist.dta", replace
file /Users/devin/Desktop/BA952 Replication/Sufi/prepared_data/missinglist.dta saved

. use "${root}/prepared_data/database3.dta", clear

. merge 1:1 gvkey fyear using "${root}/prepared_data/missinglist.dta"

    Result                      Number of obs
    -----------------------------------------
    Not matched                        26,111
        from master                    26,109  (_merge==1)
        from using                          2  (_merge==2)

    Matched                             2,336  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(26,111 observations deleted)

. misstable summarize, generate(missing_)
                                                               Obs<.
                                                +------------------------------
               |                                | Unique
      Variable |     Obs=.     Obs>.     Obs<.  | values        Min         Max
  -------------+--------------------------------+------------------------------
          dcvt |         8               2,328  |    199          0      4807.9
           dlc |        25               2,311  |   >500          0        6661
          dltt |         9               2,327  |   >500          0       20099
            lt |         1               2,335  |   >500          0       59805
         oibdp |        20               2,316  |   >500   -567.413       17001
         ppent |         5               2,331  |   >500          0       58530
         pstkc |         7               2,329  |    140          0      1570.2
          txdb |       776               1,560  |    357          0        1051
       ipodate |       726               1,610  |    365       4476       14959
  ln_assets_~h |         9               2,327  |   >500  -6.907755    11.51005
  debt_to_as~s |        34               2,302  |   >500          0    .9376375
  EBITDA_to_~h |        29               2,307  |   >500  -236.1143    1.092218
  tangible_a~h |        14               2,322  |   >500          0    .9980178
     net_worth |         9               2,327  |   >500   -.072402    761.4571
   ln_firm_age |         2               2,334  |     35          0    3.433987
  scale_cash~y |         9               2,327  |   >500   .0023011     707.784
  lag_scale_~y |         1               2,335  |   >500    .001122    1552.806
  lag_indust~y |         1               2,335  |     63   .0215057    .2588197
        lineun |     2,152                 184  |     86          0        5390
          line |     2,152                 184  |     71          0       649.2
       linetot |     2,152                 184  |     85          0        5390
  lineofcred~s |     2,152                 184  |      2          0           1
           def |     2,152                 184  |      2          0           1
  total_line~s |     2,152                 184  |    126          0    .9351376
  used_line_~s |     2,152                 184  |     72          0    .8144747
  total_line~h |     2,152                 184  |    124          0           1
  unused_lin~s |     2,152                 184  |    122          0    .5622266
  unused_lin~h |     2,154                 182  |    122          0    .9989354
  -----------------------------------------------------------------------------

. 
end of do-file

. 
. log close
      name:  <unnamed>
       log:  /Users/devin/Desktop/BA952 Replication/Sufi/log/log20250207.log
  log type:  text
 closed on:   7 Feb 2025, 01:38:48
------------------------------------------------------------------------------------------------------------
